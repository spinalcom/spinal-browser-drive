{
  "version": 3,
  "sources": [
    "node_modules/browser-pack/_prelude.js",
    "app/app.config.js",
    "app/app.js",
    "app/app.route.js",
    "app/controllers/FileExplorerCtrl.js",
    "app/controllers/InspectorCtrl.js",
    "app/controllers/loginCtrl.js",
    "app/controllers/mainCtrl.js",
    "app/controllers/navbarCtrl.js",
    "app/controllers/sideBarCtrl.js",
    "app/directives/dnd-fileExplorer.js",
    "app/directives/jsTree.directive.js",
    "app/directives/navbar.js",
    "app/directives/spinalInspect.js",
    "app/services/authService.js",
    "app/services/goldenLayoutService.js",
    "app/services/spinalCore.js",
    "app/services/spinalFilesystem.js",
    "app/services/spinalModelDictionary.js"
  ],
  "names": [],
  "mappings": "AAAA;aCAA,OAAO,QAAQ,OAAO,eAAgB,SAAS,UAC7C,UAAW,IACX,cAAe,YACf,eAAgB,OAChB,eAAgB;;;aCJlB,OAAO,QAAQ,OAAO,aAAc,YACpC,OAAO,QAAQ,OAAO,mBACtB,OAAO,QAAQ,OAAO,qBACtB,OAAO,QAAQ,OAAO,sBACtB,OAAO,QAAQ,OAAO,iBAAkB,WAAY,eACpD,OAAO,QAAQ,OAAO,uBAEtB,OAAO,QACJ,OAAO,aACN,YACA,aACA,iBACA,YACA,mBACA,cACA,mBACA,eACA,kBACA,YACA,WACA,gBACA,qBAED,KACC,aACA,YACA,cACA,SAAS,EAAY,EAAW,GAC9B,IAAI,EAAO,EAAY,WACvB,EAAW,IAAI,oBAAqB,SAAS,EAAO,GAC9C,EAAK,QAAQ,eACV,EAAY,gBACf,EAAY,MAAM,EAAK,SAAU,EAAK,UAAU,KAC9C,aACA,WACE,EAAU,KAAK,kBAS5B,QACC,qBACA,SAAS,GACP,EACG,MAAM,YACN,eAAe,QACd,QAAS,QAEV,cAAc,QACb,QAAS,QAEV,OACH,EAAmB,MAAM,WAAW,OAEpC,EAAmB,gBAAgB,YACnC,EAAmB,MAAM,eACzB,EAAmB,kBAAiB,MAGvC,KACC,iBACA,QACA,SAAS,EAAgB,GA6BvB,IA5BA,IAAI,EAAgB,SAAC,EAAK,GACxB,EAAM,IAAI,GAAK,KACb,SAAA,GACE,EAAe,IAAI,EAAM,EAAS,OAEpC,WACE,QAAQ,IAAI,wBAA0B,MAIxC,IAEA,IAAK,6BACL,KAAM,iBAGN,IAAK,+BACL,KAAM,mBAGN,IAAK,kCACL,KAAM,sBAGN,IAAK,yCACL,KAAM,6BAGD,EAAI,EAAG,EAAI,EAAO,OAAQ,IACjC,EAAc,EAAO,GAAG,IAAK,EAAO,GAAG;;;aChG/C,QAAQ,OAAO,aACZ,QAAQ,iBAAkB,oBACzB,SAAU,EAAgB,GACxB,EACG,KAAK,SACJ,YAAa,0BACb,cAAc,EACd,WAAY,aAEb,KAAK,UACJ,YAAa,2BACb,cAAc,EACd,WAAY,cAGb,WACC,WAAY;;;aChBtB,OAAO,QACJ,OAAO,oBACN,mBACA,eACA,gBACA,aACA,kBAED,WAAW,oBACV,SACA,aACA,mBACA,YACA,cACA,WACA,YACA,aACA,SACE,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GA+EA,SAAS,uBACP,OAAO,EAAiB,eAAe,GAAQ,KAAK,SAAA,GAOlD,IANA,IAAI,EAAI,EACJ,EAAkB,SAAC,EAAK,GAC1B,OAAO,EAAI,UAAU,SAAA,GACnB,OAAO,EAAO,UAAU,GAAG,YAAc,EAAK,cAG3C,EAAI,EAAO,UAAU,SACM,GAA5B,EAAgB,EAAK,IACvB,EAAO,UAAU,OAAO,EAAG,GAC3B,EAAI,GACC,IAET,IAAI,GAAQ,EACZ,IAAK,EAAI,EAAG,EAAI,EAAI,OAAQ,IAAK,CAC/B,GAAQ,EACR,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,UAAU,OAAQ,IAC3C,GAAI,EAAO,UAAU,GAAG,aAAe,EAAI,GAAG,WAAY,CACxD,EAAO,UAAU,GAAG,KAAO,EAAI,GAAG,KAClC,EAAO,UAAU,GAAG,WAAa,EAAI,GAAG,WACxC,EAAO,UAAU,GAAG,MAAQ,EAAI,GAAG,MACnC,EAAO,UAAU,GAAG,cAAgB,EAAI,GAAG,cAC3C,EAAO,UAAU,GAAG,QAAU,EAAI,GAAG,QACjC,EAAI,GAAG,cACT,EAAO,UAAU,GAAG,cAAgB,EAAI,GAAG,cAEzC,EAAI,GAAG,MAAO,EAAO,UAAU,GAAG,MAAQ,EAAI,GAAG,MAC5C,EAAO,UAAU,GAAG,QAC3B,EAAO,UAAU,GAAG,OAAQ,GAC9B,GAAQ,EACR,MAGS,GAAT,GACF,EAAO,UAAU,OAAO,EAAG,EAAG,EAAI,OAhH1C,EAAO,SAAW,EAClB,EAAO,IAAM,EAAW,MACxB,EAAO,SAAW,EAClB,EAAO,aAAe,EACtB,EAAO,WAEP,EAAO,QAAU,WACf,EAAiB,mBAAmB,IAEtC,EAAO,UACP,EAAO,aACP,EAAO,KAAO,EAAY,WAE1B,EAAO,eAAiB,SAAA,GACtB,IAAI,EAAM,EAAO,QAAQ,QAAQ,GACjC,EAAO,QAAQ,OAAO,EAAM,GAC5B,IAAI,EAAI,OAAO,WAAW,SAAS,EAAI,YACnC,IACE,aAAa,KACf,EAAE,KAAK,SAAA,GACD,GACF,EAAO,gBAAgB,EAAG,EAAO,WAG5B,aAAa,OAAO,WAC7B,EAAO,gBAAgB,EAAG,EAAO,WAIvC,EAAO,QAAU,SAAA,GACf,OAAO,OAAO,gBAAgB,0BAA0B,GACpD,OAAO,gBAAgB,0BAA0B,GACjD,OAAO,gBAAgB,0BAA0B,SAGvD,EAAO,WAAa,SAAC,EAAO,GAC1B,GAAqB,GAAjB,EAAM,QAAkB,CAC1B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,UAAU,OAAQ,IAC3C,EAAO,UAAU,GAAG,UAAW,EAC/B,EAAO,UAAU,GAAG,MAAO,EAC3B,EAAO,UAAU,GAAG,YAAa,EAEnC,QAAQ,IAAI,GAEd,EAAK,UAAY,EAAK,UAExB,EAAO,WAAa,SAAA,GAClB,GAAuB,aAAnB,EAAK,WAA2B,CAClC,IAAI,EAAI,OAAO,WAAW,SAAS,EAAK,YACpC,IACF,EAAO,aACP,EAAE,KAAK,SAAA,GACD,IACF,EAAO,QAAQ,MACb,KAAM,EAAK,KACX,WAAY,EAAK,aAEnB,EAAO,gBAAgB,EAAG,EAAO,eAO3C,EAAO,SAAW,SAAA,GAChB,MAAA,UAAgB,EAAK,MAAQ,UAAY,SAAzC,mBAEF,EAAO,QAAU,SAAA,GACf,OAAO,IAAI,KAAK,EAAM,OAAO,kBAG/B,EAAO,gBAAkB,SAAC,EAAK,GAC7B,EAAO,SAAW,EAClB,EAAO,QAAU,EACjB,wBA2CF,IAAI,EAAsB,EAAiB,SACzC,qBACA,sBAEF,EAAO,IAAI,WAAY,GAEvB,EAAO,YAAc,EACrB,EAAO,kBAAoB,SAAA,GAEzB,IADA,IAAI,EAAc,EACT,EAAI,EAAG,EAAI,EAAO,UAAU,OAAQ,IACvC,EAAO,UAAU,GAAG,UAAU,IAGpC,OAAmB,GAAf,EACK,EAAO,QAAQ,GACb,GAAe,EACjB,UAAY,EAEd,iBAGT,EAAO,SACL,UAAW,SAAC,EAAO,GACjB,GAAoB,GAAhB,EAAI,UAAsC,GAAjB,EAAM,QACjC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,UAAU,OAAQ,IAC3C,EAAO,UAAU,GAAG,UAAW,EAGnC,EAAI,UAAW,EACf,IAAI,EAAQ,OAAO,EACjB,+DACE,EAAO,kBAAkB,EAAI,YAC7B,iOAGA,EAAI,KACJ,uBAEJ,EAAS,EAAM,GAAf,CAAmB,GACnB,EAAM,SAAS,QACf,EAAM,aAAa,aAAa,EAAM,GAAI,EAAG,GAC7C,EAAM,aAAa,QAAQ,OAAQ,EAAI,YACvC,EAAiB,oBACjB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,UAAU,OAAQ,IACP,GAAhC,EAAO,UAAU,GAAG,WACtB,EAAO,UAAU,GAAG,YAAa,EACjC,EAAiB,iBAAiB,KAAK,EAAO,UAAU,KAS5D,OANA,EAAiB,iBAAmB,EAAO,SAC3C,EAAiB,eAAiB,EAAO,QAEzC,EAAiB,eAAe,GAChC,EAAW,mBAAqB,EAChC,EAAO,UACA,GAET,QAAS,WACP,OAAO,EAAE,eAAe,SACxB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,UAAU,OAAQ,IAC3C,EAAO,UAAU,GAAG,YAAa,EACjC,EAAO,UAAU,GAAG,MAAO,EAE7B,EAAO,YAAc,EACrB,EAAO,cAAe,EAEtB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAiB,iBAAiB,OAAQ,IAAK,CAEjE,IADA,IAAI,EAAQ,EAAiB,iBAAiB,GACrC,EAAI,EAAG,EAAI,EAAM,UAAU,OAAQ,IAC1C,GAA+B,GAA3B,EAAM,UAAU,GAAG,KAAc,CACnC,EAAM,UAAU,GAAG,MAAO,EAC1B,MAGJ,EAAM,cAAe,EACrB,EAAM,SAGR,OADA,EAAiB,qBACV,GAET,UAAW,SAAA,GACT,EAAM,kBAER,SAAU,SAAC,EAAO,GAGhB,GAFA,EAAM,iBACN,EAAM,kBACF,EAAI,YAAc,EAAO,YAAY,WAAY,OAAO,EACxC,GAAhB,EAAI,UAAsC,aAAlB,EAAI,WAC9B,EAAO,YAAc,EAErB,EAAO,YAAc,EAEvB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,UAAU,OAAQ,IAC3C,EAAO,UAAU,GAAG,MAAO,EAEzB,EAAO,cACT,EAAM,aAAa,WAAa,OAChC,EAAM,aAAa,cAAgB,OACnC,EAAI,MAAO,GAEb,EAAO,cAAe,EACtB,EAAO,SACP,EAAiB,eAAe,GAChC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAiB,iBAAiB,OAAQ,IAAK,CACjE,IAAI,EAAQ,EAAiB,iBAAiB,GAC9C,GAAI,GAAS,EAAQ,CACnB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,UAAU,OAAQ,IAC1C,GAA+B,GAA3B,EAAM,UAAU,GAAG,KAAc,CACnC,EAAM,UAAU,GAAG,MAAO,EAC1B,MAGJ,EAAM,cAAe,EACrB,EAAM,YAIZ,KAAM,SAAA,GACJ,EAAM,kBACN,EAAM,iBAIN,IAHA,IAAI,EAAW,EAAiB,iBAC5B,EAAS,EACT,EAAI,EACD,EAAI,EAAO,UAAU,OAAQ,IAClC,GAAI,EAAO,UAAU,GAAG,KAAM,CAC5B,EAAS,EAAO,UAAU,GAC1B,MAGJ,IAAK,GAA+B,aAArB,EAAO,WAA2B,OAAO,EACxD,IAAI,EAAQ,EAAM,OAAO,MAKzB,GAJK,GAA0B,IAAjB,EAAM,SAClB,EAAQ,EAAM,aACV,EAAM,aAAa,MACnB,EAAM,cAAc,aAAa,OACnC,EAAM,OAAS,EAAG,CAEpB,IAAI,EAAQ,OAAO,WAAW,SAAS,EAAO,YAO9C,OANI,GACF,EAAO,aAAa,EAAO,GAE7B,EAAO,cAAe,EACtB,EAAO,UAEA,EAET,IAAK,GAA+B,aAArB,EAAO,WAA2B,OAAO,EACxD,IAAI,EAAW,EAAiB,iBAC5B,EAAQ,OAAO,WAAW,SAAS,EAAO,YAC9C,GAAI,EAAO,CAMT,IALA,IAAI,EAAgB,EAAiB,eAAe,OAClD,GAEE,EAAmB,EAAO,QAAQ,OAAO,GAEpC,EAAM,EAAG,EAAM,EAAc,OAAQ,IAAO,CAGnD,IAFA,IAAI,EAAU,EAAc,GACxB,GAAY,EACP,EAAI,EAAG,EAAI,EAAiB,OAAQ,IAAK,CAEhD,GADc,EAAiB,GACnB,YAAc,EAAQ,WAAY,CAC5C,GAAY,EACZ,OAGJ,IAAK,EACH,MAGJ,GAAI,EAAc,QAAU,EAC1B,OAAO,EAET,IAAK,EAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CACpC,IAAI,EAAI,OAAO,WAAW,SAAS,EAAS,GAAG,YAC3C,GAAG,EAAS,WAAW,GAEzB,GACF,EAAM,KAAK,SAAA,GACT,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CACxC,IAAI,EAAI,OAAO,WAAW,SAAS,EAAS,GAAG,YAC3C,GAAG,EAAE,KAAK,MAKtB,OAAO,IAGX,EAAO,aAAe,SAAC,EAAO,GAC5B,GAAI,EAAM,OAAS,EACjB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,OAAQ,IAAK,CACrC,IAAI,EAAO,EAAM,GACb,EAAW,IAAI,OAAO,KAAK,GAC/B,EAAO,gBAAgB,EAAK,KAAM,GAClC,EAAiB,SAAS,EAAK,KAAM,KAI3C,EAAO,gBAAkB,SAAC,EAAM,EAAkB,GAEhD,IADA,IAAI,GAAQ,EACH,EAAI,EAAG,EAAI,EAAiB,OAAQ,IACvC,EAAiB,GAAG,KAAK,OAAS,IAAM,GAAQ,GAEtD,GAAa,GAAT,EAAe,CACZ,IAGI,EADP,GAAQ,KADR,EAAM,GACc,IAItB,OADA,EAAO,EAAK,QADF,aACe,IAAM,EAAM,KAC9B,EAAO,gBAAgB,EAAM,EAAkB,GAExD,OAAO,GAGT,EAAO,eACL,KAAM,SAAA,GACJ,EAAM,kBACN,EAAM,iBACN,IAAI,EAAQ,EAAM,OAAO,MAKzB,GAJK,GAA0B,IAAjB,EAAM,SAClB,EAAQ,EAAM,aACV,EAAM,aAAa,MACnB,EAAM,cAAc,aAAa,OACnC,EAAM,OAAS,EAAG,CAEpB,IAAI,EAAQ,EAAO,SAInB,OAHA,EAAO,aAAa,EAAO,GAC3B,EAAO,cAAe,EACtB,EAAO,UACA,EAET,IAAI,EAAW,EAAiB,iBAChC,GAAI,GAAY,EAAO,SAAU,OAAO,EACxC,IAAI,EAAW,EAAiB,iBAE5B,EAAQ,EAAO,SACnB,GAAI,EAAO,CAMT,IALA,IAAI,EAAgB,EAAiB,eAAe,OAClD,GAEE,EAAmB,EAAO,QAErB,EAAM,EAAG,EAAM,EAAc,OAAQ,IAAO,CAGnD,IAFA,IAAI,EAAU,EAAc,GACxB,GAAY,EACP,EAAI,EAAG,EAAI,EAAiB,OAAQ,IAAK,CAEhD,GADc,EAAiB,GACnB,YAAc,EAAQ,WAAY,CAC5C,GAAY,EACZ,OAGJ,IAAK,EACH,MAGJ,GAAI,EAAc,QAAU,EAC1B,OAAO,EAET,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CACxC,IAAI,EAAI,OAAO,WAAW,SAAS,EAAS,GAAG,YAC3C,GAAG,EAAS,WAAW,GAE7B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CACxC,IAAI,EAAI,OAAO,WAAW,SAAS,EAAS,GAAG,YAC3C,GAAG,EAAM,KAAK,IAItB,OADA,EAAO,cAAe,GACf,GAET,SAAU,SAAA,GACR,EAAM,iBACN,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,UAAU,OAAQ,IAC3C,GAAgC,GAA5B,EAAO,UAAU,GAAG,KAAc,CACpC,EAAO,UAAU,GAAG,MAAO,EAC3B,MAMJ,IAHA,EAAO,YAAc,EACrB,EAAO,cAAe,EACtB,EAAiB,eAAe,GAC3B,EAAI,EAAG,EAAI,EAAiB,iBAAiB,OAAQ,IAAK,CAC7D,IAAI,EAAQ,EAAiB,iBAAiB,GAC9C,GAAI,GAAS,EAAQ,CACnB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,UAAU,OAAQ,IAC1C,GAA+B,GAA3B,EAAM,UAAU,GAAG,KAAc,CACnC,EAAM,UAAU,GAAG,MAAO,EAC1B,MAGJ,EAAM,cAAe,EACrB,EAAM,UAIV,OADA,EAAO,UACA,GAET,UAAW,SAAA,GAET,OADA,EAAM,kBACC,IAIX,uBAEA,EAAO,qBACP,EAAO,aAAe,SAAA,GACpB,WAAW,WACT,OAAO,EAAE,YAAc,EAAO,IAAM,IAAM,GAAO,WAIrD,EAAO,uBAAyB,SAAC,EAAS,EAAI,GAC5C,EAAO,kBAAoB,OAAO,gBAAgB,iBAChD,gBAEE,KAAM,EACN,MAAO,IAGX,EAAQ,KAAK,IAEf,EAAO,yBAA2B,SAAC,EAAQ,EAAM,GAC/C,EAAK,eACH,IAAK,EACL,KAAM,EACN,KAAM,EACN,MAAO,KAIX,EAAO,yBAEP,EAAO,2BAA6B,SAAC,EAAS,GAC5C,EAAO,sBAAwB,OAAO,gBAAgB,iBACpD,uBAEE,MAAO,EACP,MAAO,EAAO,WAGlB,EAAQ,KAAK,IAEf,EAAO,6BAA+B,SAAC,EAAQ,GAC7C,EAAK,eACH,IAAK,EACL,KAAM,EACN,MAAO,EAAO,SACd,MAAO;;;aC9ejB,OAAO,QAAQ,OAAO,oBAAoB,WAAW,iBACnD,SACA,YACA,mBACA,cACA,WACA,YACA,mBACA,WACA,SACE,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GAEA,EAAO,SAAW,EAClB,EAAO,WACP,IAAI,OAAA,EAAU,OAAA,EAAU,OAAA,EAAM,OAAA,EAAQ,OAAA,EAAY,OAAA,EAC9C,EAAW,EACX,KACA,EAAc,GACd,EAAe,GACf,KAEA,GAEA,MAAO,OACP,UAAW,OACX,UAAW,UACX,UAAW,UACX,eAAgB,UAChB,eAAgB,UAChB,eAAgB,WAGhB,EAAO,SAAA,GAaT,IAZA,IAAI,EAAO,OAAO,gBAAgB,iBAAiB,YAAa,GAC5D,KACA,EAAyB,SAAA,GAC3B,OAAO,WACL,IAAI,GACF,gBAAiB,EAAE,KAAK,WACxB,MAAO,GAET,EAAI,OAAO,KAIN,EAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CACpC,IAAI,EAAM,EAAK,GACf,EAAI,MACF,MAAO,EAAI,MACX,OAAQ,EAAuB,KAGnC,OAAO,GAGL,EAAW,SAAC,EAAG,GAKjB,MAJI,KAAY,EAAE,EAAd,IAAmB,EAAE,EAArB,wBACW,EAAE,EAAI,EAAE,GAAK,EADxB,IAC6B,EAAE,EAD/B,yBAEW,EAAE,EAAI,EAAE,GAAK,EAFxB,IAE6B,EAAE,EAF/B,wBAGU,EAAE,EAHZ,IAGiB,EAAE,GAGrB,EAAO,WACwB,MAA7B,OAAO,GAAG,MAAM,WAClB,EAAS,KAAK,YAAa,OAAO,GAAG,MAAM,YAG3C,EAAkB,SAAC,EAAO,GAG5B,IAFA,IAAI,EAAI,EACJ,EAAM,EACH,EAAI,GACT,GAAwB,EAAjB,EAAY,KACjB,EAIJ,OAFA,GAAO,EAAY,GACnB,GAAO,GAGT,OAAO,QAAQ,QAAQ,UAAU,MAAM,WACrC,IAAI,EAAM,EAAiB,eACvB,EAAO,EAAiB,KAAK,GACjC,EAAc,EAAK,QACnB,EAAe,EAAK,SACpB,IAAI,EAAU,iBAAmB,EAC7B,EAAU,OAAO,GAAG,OAAO,IAAM,GACjC,EAAO,OAAO,GAAG,OAAO,MAAM,EAAc,IAC5C,EAAe,OAAO,GACvB,OACA,aAAa,GAAK,IAClB,GAAG,OAAQ,GACd,EAAa,SAAS,GACpB,IAAI,OAAA,EAAG,OAAA,EACH,EAAQ,EAAE,MAAQ,EAClB,EAAQ,EACZ,EAAI,EACJ,GAAS,EAAE,MACX,GAAK,EAAE,GAEP,KAAO,EADO,KAGZ,GADA,GAAK,EAAS,IACN,EAAQ,EAAc,GAC9B,GAAQ,EAAgB,EAAO,GAAK,EAAI,GAJ5B,MAKK,GAAS,KAE5B,GAAK,EAAgB,EAAE,MAAO,GAAK,EACnC,EAAI,EAAI,EAAQ,EAAe,EAC/B,EACG,aACA,SAxFkB,KAyFlB,KACC,EAAa,UACb,OAAO,GAAG,aAAa,UAAU,EAAG,GAAG,MAAM,KAGnD,EAAQ,OAAO,OAAO,SACtB,IAAI,EAAU,EACX,OAAO,OACP,KAAK,QAAS,GACd,KAAK,SAAU,GACf,QAAQ,eAAe,GACvB,KAAK,GACR,EAAQ,GAAG,gBAAiB,MAER,OAAO,GAAG,OAC5B,iCAAmC,GAEvB,GAAG,QAAS,WACnB,GACL,EAAW,KAEb,EAAU,EACP,OAAO,QACP,KAAK,QAAS,YACd,KAAK,IAAK,EAAc,GACxB,KAAK,IAAK,EAAe,GACzB,KAAK,cAAe,UACpB,KAAK,qBAAsB,WAC3B,KAAK,OAAQ,QAChB,EAAW,EAAQ,OAAO,KAE1B,IAAI,EAAc,SAAA,GAQhB,GAPI,EAAE,UACJ,EAAE,UAAY,EAAE,SAChB,EAAE,SAAW,OAEb,EAAE,SAAW,EAAE,UACf,EAAE,UAAY,MAEZ,EAAE,KAAK,YACH,EAAE,WAAY,EAAE,UAAY,CAChC,IAAI,EAAI,OAAO,WAAW,SAAS,EAAE,KAAK,YAC1C,GAAI,EAAG,CACL,GAAI,aAAa,OAAO,IAWtB,YAVA,EAAE,KAAK,SAAA,GACL,EAAI,KAAK,GAAc,GACvB,IAAI,KACJ,EAAU,KAAK,GACf,EAAW,EAAK,EAAK,EAAG,EAAE,MAAQ,EAAG,EAAE,MAAQ,GAC/C,EAAE,UAAY,GACd,EAAE,KAAK,SAAW,EAAE,SACpB,EAAO,GACP,EAAW,KAIb,EAAW,EAAG,EAAG,EAAE,OAAQ,EAAE,MAAQ,EAAG,EAAE,MAAO,EAAE,KAAK,OAKhE,EAAO,GACP,EAAW,IAEb,EAAO,WACL,EAAQ,KAAK,QAAS,GAAa,KAAK,SAAU,GAC9C,GACF,EACG,KAAK,IAAK,EAAc,GACxB,KAAK,IAAK,EAAe,GACzB,KACC,+DAED,IACL,EAAS,GAAK,EAAe,EAC7B,EAAS,GAAK,EACd,EAAO,KAET,IAAI,EAAc,SAAA,GAChB,EAAW,IAEb,EAAS,SAAA,GACP,IACI,EADQ,EAAK,MAAM,EAAc,GACvB,CAAM,GAChB,EAAQ,EAAQ,cAChB,EAAQ,EAAQ,cAAc,MAAM,GACxC,EAAM,QAAQ,SAAA,GACP,EAAY,EAAE,OAEjB,EAAY,EAAE,OAAS,KAAK,IAC1B,EAAE,KAAK,KAAK,OACZ,EAAY,EAAE,QAJS,EAAY,EAAE,OAAS,EAAE,KAAK,KAAK,SAOhE,EAAM,QAAQ,SAAA,GACZ,EAAE,EAAI,EAAgB,EAAE,MAAO,KAGjC,IAAI,EAAO,EAAS,UAAU,UAAU,KAAK,EAAO,SAAA,GAClD,OAAO,EAAE,KAAO,EAAE,KAAO,KAGvB,EAAY,EACb,QACA,OAAO,KACP,KAAK,QAAS,QACd,KAAK,YAAa,WACjB,MAAO,aAAe,EAAO,GAAK,IAAM,EAAO,GAAK,MAErD,GAAG,YAAa,gBAChB,GAAG,YAAa,SAAS,GAwN9B,EAAiB,QACd,MAAM,OAAQ,OAAO,GAAG,MAAM,MAAQ,MACtC,MAAM,MAAO,OAAO,GAAG,MAAM,MAAQ,QAvNnC,GAAG,WAAY,eAElB,EACG,OAAO,UACP,KAAK,QAAS,cACd,KAAK,IAAK,MACV,GAAG,cAAe,OAAO,GAAG,YAAY,IACxC,GAAG,QAAS,GAEf,EACG,OAAO,QACP,KAAK,IAAK,SAAA,GACT,OAAO,EAAE,UAAY,EAAE,WAAa,GAAK,KAE1C,KAAK,KAAM,SACX,KAAK,QAAS,YACd,KAAK,cAAe,SAAA,GACnB,OAAO,EAAE,UAAY,EAAE,UAAY,MAAQ,UAE5C,KAAK,SAAA,GACJ,OAAO,EAAE,KAAK,OAEf,KAAK,OAAQ,QACb,GAAG,QAAS,GACZ,GAAG,cAAe,OAAO,GAAG,YAAY,IAE3C,IAAI,EAAa,EAAU,MAAM,GACjC,EACG,aACA,SAvOkB,KAwOlB,KAAK,YAAa,SAAS,GAC1B,MAAO,aAAe,EAAE,EAAI,IAAM,EAAE,EAAI,MAI5C,EACG,OAAO,qBACP,KAAK,IAAK,GACV,MAAM,OAAQ,SAAS,GACtB,OAAI,EAAE,KAAK,KACL,EAAE,KAAK,WAAe,EAAE,UAAY,EAAE,UAGtC,EAAE,UAAY,EAAE,SAAS,OAAS,EAC7B,EAAe,eAClB,EAAE,UAAY,EAAE,UAEf,EAAe,UADb,EAAe,eALf,EAAe,UAOf,EAAE,KAAK,KACZ,EAAE,KAAK,WAAe,EAAE,UAAY,EAAE,UAGtC,EAAE,UAAY,EAAE,SAAS,OAAS,EAC7B,EAAe,eAClB,EAAE,UAAY,EAAE,UAEf,EAAe,UADb,EAAe,eALf,EAAe,UAOf,EAAE,KAAK,KACZ,EAAE,KAAK,WAAe,EAAE,UAAY,EAAE,UAGtC,EAAE,UAAY,EAAE,SAAS,OAAS,EAC7B,EAAe,eAClB,EAAE,UAAY,EAAE,UAEf,EAAe,UADb,EAAe,eALf,EAAe,UAQnB,EAAe,QAEvB,KAAK,SAAU,WAElB,EACG,OAAO,iBACP,KAAK,IAAK,SAAA,GACT,OAAO,EAAE,UAAY,GAAK,KAE3B,KAAK,cAAe,SAAA,GACnB,OAAO,EAAE,SAAW,MAAQ,UAE7B,KAAK,SAAA,GACJ,OAAO,EAAE,KAAK,OAGlB,IAAI,EAAW,EACZ,OACA,aACA,SAhSkB,KAiSlB,KAAK,YAAa,WACjB,MAAO,aAAe,EAAO,EAAI,IAAM,EAAO,EAAI,MAEnD,SACH,EAAS,OAAO,UAAU,KAAK,IAAK,GACpC,EAAS,OAAO,QAAQ,MAAM,eAAgB,GAC9C,IAAI,EAAO,EAAS,UAAU,aAAa,KAAK,EAAO,SAAA,GACrD,OAAO,EAAE,KAGK,EACb,QACA,OAAO,OAAQ,KACf,KAAK,QAAS,QACd,KAAK,IAAK,WACT,IAAI,GACF,EAAG,EAAO,GACV,EAAG,EAAO,IAEZ,OAAO,EAAS,EAAG,KAII,MAAM,GAI9B,aACA,SA7TkB,KA8TlB,KAAK,IAAK,SAAA,GACT,OAAO,EAAS,EAAG,EAAE,UAIzB,EACG,OACA,aACA,SAtUkB,KAuUlB,KAAK,IAAK,WACT,IAAI,GACF,EAAG,EAAO,EACV,EAAG,EAAO,GAEZ,OAAO,EAAS,EAAG,KAEpB,SAGH,EAAM,QAAQ,SAAA,GACZ,EAAE,GAAK,EAAE,EACT,EAAE,GAAK,EAAE,KAKb,IAQI,EAAkB,YARH,WACb,GAAe,EAAK,SAAW,GAAgB,EAAK,WACtD,EAAc,EAAK,QACnB,EAAe,EAAK,SACpB,MAI4C,KAEhD,EAAO,IAAI,WAAY,WAErB,cAAc,GACd,OAAkB,MAItB,IAAI,EAAgB,SAAC,EAAO,EAAK,GAC/B,IAAI,EAAK,EAAM,OAAO,MACtB,EAAG,OAAO,MAAM,KAAK,GACrB,EAAG,OAAO,MAAM,KAAK,IAOvB,SAAS,eAAe,GACtB,EAAiB,QACd,aACA,SAAS,KACT,MAAM,UAAW,GACpB,EAAiB,QAAQ,UAAU,SAAS,SAC5C,IAAI,EAAQ,EAAiB,QAAQ,OAAO,SAE5C,EAAc,EAAO,aAAc,EAAE,KAAK,cAC1C,EAAc,EAAO,YAAa,EAAE,KAAK,YAEzC,IAfkB,EAAG,EAejB,EAAI,OAAO,WAAW,SAAS,EAAE,KAAK,YAC1C,GAAI,EACF,GAAI,aAAa,OAAO,IACtB,EAAc,EAAO,SAAU,EAAE,aAC5B,GAAI,aAAa,OAAO,IAAK,CAClC,IAAI,EAAO,EAAE,MACb,EAAc,EAAO,OAAQ,GAC7B,EAAc,EAAO,SAAU,EAAE,QAEjC,GAxBc,EAuBA,cAvBG,EAuBH,cACqB,OAAvB,EAvBP,UAAU,EAAG,IAAM,EAAE,UAAU,EAAG,GAuBK,CAC1C,IAAI,EAAK,EAAM,OAAO,MACtB,EAAG,OAAO,MAAM,KAAK,WACrB,IAAI,EAAM,EAAG,OAAO,MAAM,OAAO,OACjC,EAAI,KAAK,MAAO,GAChB,EAAI,KAAK,MAAO,WAChB,EAAI,MAAM,aAAc,KACxB,EAAI,MAAM,YAAa,WAEhB,aAAa,OAAO,IAC7B,EAAc,EAAO,QAAS,EAAE,OACvB,aAAa,OAAO,KAC7B,EAAc,EAAO,aAAc,EAAE,KAAK,OAC1C,EAAE,KAAK,SAAA,GACD,GACF,EAAc,EAAO,oBAAqB,EAAI,YAAY,SAErD,aAAa,OAAO,YAC7B,EAAc,EAAO,OAAQ,EAAE,OAWrC,SAAS,gBACP,EAAiB,QACd,aACA,SAAS,KACT,MAAM,UAAW,MAEtB,IAAI,EAAqB,KACrB,EAAuB,KACvB,EAAe,WACb,IAEJ,EAAqB,EAAS,WAC5B,EAAqB,KACrB,EAAgB,EAAU,EAAS,KAAK,MACpC,IACJ,EAAuB,EAAS,WAC9B,EAAuB,KACvB,EAAO,IACN,OACF,OAED,EAAkB,SAAlB,gBAAmB,EAAG,GACxB,GAAM,GAAK,EAAE,MAAQ,EAAE,KAAK,WAA5B,CACA,IAAI,EAAI,OAAO,WAAW,SAAS,EAAE,KAAK,YAC1C,GAAI,EAKF,GAHK,IAAM,EAAO,EAAE,KAAK,MACzB,EAAE,KAAK,aAAe,EAAE,YAAY,KACpC,EAAE,KAAK,WAAa,EAAE,WAClB,aAAa,OAAO,KAAO,aAAa,OAAO,KACjD,EAAE,KAAK,KAAO,EAAE,KAAK,KAAK,QAAQ,gBAAiB,IACnD,EAAE,KAAK,MAAP,MAAqB,EAAE,WAClB,GAAI,aAAa,OAAO,IAAK,CAClC,IAAI,EAAM,EAAE,MACR,EAAI,OAAS,KAAI,EAAM,EAAI,UAAU,EAAG,IAAM,OAClD,EAAE,KAAK,KAAO,EAAE,KAAK,KAAK,QAAQ,kBAAmB,IACrD,EAAE,KAAK,KAAU,EAAjB,OAA4B,EAAE,MAA9B,IACA,EAAE,KAAK,MAAP,OAAsB,EAAtB,SACK,GAAI,aAAa,OAAO,WAC7B,EAAE,KAAK,KAAO,EAAE,KAAK,KAAK,QAAQ,iBAAkB,IACpD,EAAE,KAAK,MAAP,MAAqB,EAAE,WAClB,GAAI,aAAa,OAAO,IAAK,CAClC,EAAE,KAAK,IAAM,EAAE,KAAK,MACpB,EAAE,KAAK,KAAO,EAAE,KAAK,KAAK,QAAQ,gBAAiB,IACnD,EAAE,KAAK,MAAP,OAAsB,EAAE,KAAK,MAA7B,IACA,EAAE,KAAK,WAAY,EACnB,IAAI,EAAW,EAAE,UAAY,EAAE,UAC/B,IAAK,EAAU,OACf,EAAE,KAAK,SAAA,GACD,EAAS,GAAG,KAAK,YAAc,EAAI,YACrC,gBAAgB,EAAS,WAGxB,GAAI,aAAa,OAAO,IAAK,CAClC,EAAE,KAAK,KAAO,EAAE,KAAK,KAAK,QAAQ,cAAe,IACjD,EAAE,KAAK,MAAP,IAAmB,EAAE,OAArB,IACA,EAAE,KAAK,KAAM,EACI,IAAb,EAAE,OACJ,EAAE,KAAK,WAAY,EACd,EAAE,KAAK,WAAY,EAC1B,IAAI,EAAW,EAAE,UAAY,EAAE,UAC/B,IAAK,EAEH,OAGF,IAAK,IAAI,EAAI,EAAG,EAAI,EAAE,OAAQ,IAC5B,GACE,EAAS,IACT,EAAS,GAAG,MACZ,EAAS,GAAG,KAAK,YACjB,EAAS,GAAG,KAAK,aAAe,EAAE,GAAG,WAErC,gBAAgB,EAAS,QACpB,CAIL,IAFA,IAAI,EAAI,EACJ,GAAS,EACN,EAAI,EAAS,OAAQ,IAE1B,GACE,EAAS,IACT,EAAS,GAAG,MACZ,EAAS,GAAG,KAAK,YACjB,EAAS,GAAG,KAAK,aAAe,EAAE,GAAG,WACrC,CACA,EAAQ,EACR,MAIJ,IAAc,GAAV,EAAa,CACf,IAAI,EAAQ,EAAS,OAAO,EAAG,GAC3B,EAAM,OAAS,GAAG,EAAS,OAAO,EAAG,EAAG,EAAM,QAG/C,CACH,IAAI,KACJ,EAAW,EAAE,GAAI,EAAK,EAAG,EAAE,MAAQ,EAAG,EAAE,MAAQ,GAChD,EAAS,OAAO,EAAG,EAAG,IAIxB,EAAE,OAAS,EAAS,QACtB,EAAS,OAAO,EAAE,OAAQ,EAAS,OAAS,EAAE,QACxB,IAApB,EAAS,SACX,EAAE,SAAW,EAAE,UAAY,EAAE,KAAK,SAAW,EAAE,KAAK,UAAY,WAE7D,GAAI,aAAa,OAAO,MAAO,CACpC,EAAE,KAAK,KAAM,EACb,EAAE,KAAK,KAAO,EAAE,KAAK,KAAK,QAAQ,YAAa,IAC/C,EAAE,KAAK,MAAP,IAAmB,EAAE,iBAAiB,OAAtC,IACA,IAAI,EAAI,EACJ,EAAW,EAAE,UAAY,EAAE,UAI/B,GAHkC,IAA9B,EAAE,iBAAiB,OACrB,EAAE,KAAK,WAAY,EACd,EAAE,KAAK,WAAY,GACrB,EACH,OAEF,IAAK,EAAI,EAAG,EAAI,EAAS,OAAQ,IAC/B,EAAS,GAAG,KAAK,MAAO,EAE1B,IAAK,EAAI,EAAG,EAAI,EAAE,iBAAiB,OAAQ,IAAK,CAG9C,IAFA,IAAI,EAAc,EAAE,EAAE,iBAAiB,IACnC,GAAQ,EACH,EAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CACxC,IAAI,EAAQ,EAAS,GAEnB,GACA,EAAM,MACN,EAAM,KAAK,YACX,EAAY,aAAe,EAAM,KAAK,aAEtC,EAAM,KAAK,MAAO,EAClB,gBAAgB,GAChB,GAAQ,GAGZ,GAAa,GAAT,EAAgB,CAClB,IAAI,KACJ,EAAW,EAAa,EAAK,EAAG,EAAE,MAAQ,EAAG,EAAE,MAAQ,GACvD,EAAI,KAAK,MAAO,EAChB,EAAS,KAAK,IAIlB,IADA,EAAI,EACG,EAAI,EAAS,QACb,EAAS,GAAG,KAAK,KAItB,IAHE,EAAS,OAAO,EAAG,MAQ7B,EAAO,QAAU,WACf,EAAiB,iBAAiB,IAEpC,EAAO,UAAY,SAAA,GACjB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAU,OAAQ,IACpC,EAAU,GAAG,OAAO,GAEtB,KACA,EAAO,MAAQ,EAAiB,iBAChC,IAAI,EAAI,OAAO,WAAW,SAAS,GAC/B,IACF,EAAU,KAAK,GACf,EAAE,KAAK,GACP,EAAO,SAAS,KAIpB,IAAI,EAAa,SAAb,WAAc,EAAG,EAAG,GAAkD,IAA1C,EAA0C,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAA9B,EAAG,EAA2B,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAnB,EAAG,EAAgB,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAT,KAC/D,GAAK,EAUL,GATK,IAAM,EAAO,EAAE,YAAY,MAChC,EAAE,OAAS,EACX,EAAE,MAAQ,EACV,EAAE,QACF,EAAE,KAAK,KAAO,EACd,EAAE,KAAK,aAAe,EAAE,YAAY,KACpC,EAAE,KAAK,WAAa,EAAE,aAEpB,EACE,aAAa,OAAO,IAAK,CAI3B,GAHA,EAAE,KAAK,KAAO,EAAE,KAAK,KAAK,QAAQ,cAAe,IACjD,EAAE,KAAK,MAAP,IAAmB,EAAE,OAArB,IACA,EAAE,KAAK,KAAM,EACG,GAAZ,EAAE,OAEJ,YADA,EAAE,KAAK,WAAY,GAIrB,GADA,EAAE,KAAK,WAAY,EACf,EAAQ,EACV,OAEF,EAAE,YACF,EAAE,KAAK,SAAW,EAAE,SACpB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAE,OAAQ,IAAK,CACjC,IAAI,KACJ,WAAW,EAAE,GAAI,EAAK,EAAG,EAAW,GACpC,EAAE,SAAS,KAAK,SAEb,GAAI,aAAa,OAAO,KAAO,aAAa,OAAO,KACxD,EAAE,KAAK,MAAP,MAAqB,EAAE,WAClB,GAAI,aAAa,OAAO,IAAK,CAClC,IAAI,EAAM,EAAE,MACR,EAAI,OAAS,KAAI,EAAM,EAAI,UAAU,EAAG,IAAM,OAClD,EAAE,KAAK,KAAU,EAAjB,OAA4B,EAAE,MAA9B,IACA,EAAE,KAAK,MAAP,OAAsB,EAAtB,SACK,GAAI,aAAa,OAAO,IAC7B,EAAE,KAAK,WAAY,EACnB,EAAE,KAAK,IAAM,EAAE,KAAK,MACpB,EAAE,KAAK,MAAP,OAAsB,EAAE,KAAK,MAA7B,SACK,GAAI,aAAa,OAAO,WAC7B,EAAE,KAAK,MAAP,MAAqB,EAAE,WAClB,GAAI,aAAa,OAAO,MAAO,CAIpC,GAHA,EAAE,KAAK,KAAM,EACb,EAAE,KAAK,KAAO,EAAE,KAAK,KAAK,QAAQ,YAAa,IAC/C,EAAE,KAAK,MAAP,IAAmB,EAAE,iBAAiB,OAAtC,IACI,EAAQ,EAIV,YAHI,EAAE,iBAAiB,OAAS,IAC9B,EAAE,KAAK,WAAY,IAIvB,EAAE,YACF,EAAE,KAAK,SAAW,EAAE,SACpB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAE,iBAAiB,OAAQ,IAAK,CAClD,IAAI,KACJ,WACE,EAAE,EAAE,iBAAiB,IACrB,EACA,EACA,EACA,EACA,EAAE,iBAAiB,IAErB,EAAE,SAAS,KAAK,MAoEtB,EAAO,SAAW,SAAA,GAChB,GAAK,EAAL,CACI,GAAS,EAAQ,SACrB,EAAU,KACV,IAAI,MAnEO,SAAT,OACF,EACA,GAIG,IAHH,EAGG,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAHS,EACZ,EAEG,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAFK,EACR,EACG,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GADI,EAAE,YAAY,KAOrB,GALA,EAAE,KAAO,EACT,EAAE,aAAe,EAAE,YAAY,KAC/B,EAAE,WAAa,EAAE,aAEf,EACE,aAAa,OAAO,IAAK,CAG3B,GAFA,EAAE,MAAF,IAAc,EAAE,OAAhB,IACA,EAAE,KAAM,EACQ,GAAZ,EAAE,OAAa,OACnB,GAAI,EAAQ,EACV,OAEF,EAAE,WAAY,EACd,EAAE,YACF,IAAK,IAAI,EAAI,EAAG,EAAI,EAAE,OAAQ,IAAK,CACjC,IAAI,KACJ,OAAO,EAAE,GAAI,EAAK,EAAW,GAC7B,EAAE,SAAS,KAAK,SAEb,GAAI,aAAa,OAAO,KAAO,aAAa,OAAO,KACxD,EAAE,MAAF,MAAgB,EAAE,WACb,GAAI,aAAa,OAAO,IAAK,CAClC,IAAI,EAAM,EAAE,MACR,EAAI,OAAS,KAAI,EAAM,EAAI,UAAU,EAAG,IAAM,OAClD,EAAE,KAAU,EAAZ,OAAuB,EAAE,MAAzB,IACA,EAAE,MAAF,OAAiB,EAAjB,SACK,GAAI,aAAa,OAAO,IAC7B,EAAE,WAAY,EACd,EAAE,IAAM,EAAE,KAAK,MACf,EAAE,MAAF,OAAiB,EAAE,KAAK,MAAxB,SACK,GAAI,aAAa,OAAO,WAC7B,EAAE,MAAF,MAAgB,EAAE,WACb,GAAI,aAAa,OAAO,MAAO,CAGpC,GAFA,EAAE,KAAM,EACR,EAAE,MAAF,IAAc,EAAE,iBAAiB,OAAjC,IACI,EAAQ,EAIV,YAHI,EAAE,iBAAiB,OAAS,IAC9B,EAAE,WAAY,IAIlB,EAAE,YACF,IAAK,IAAI,EAAI,EAAG,EAAI,EAAE,iBAAiB,OAAQ,IAAK,CAClD,IAAI,KACJ,OACE,EAAE,EAAE,iBAAiB,IACrB,EACA,EACA,EACA,EAAE,iBAAiB,IAErB,EAAE,SAAS,KAAK,KAUpB,CAAO,EAAO,GACd,EAAW,OAAO,GAAG,UAAU,EAAK,SAAS,GAC3C,OAAO,EAAE,WAEP,IACF,IACA,EAAW,MAIf,EAAO,eACL,KAAM,SAAA,GACJ,EAAM,kBACN,EAAM,iBACN,IAAI,EAAW,EAAiB,iBAUhC,OATI,GAAY,EAAS,KAEvB,EAAO,QAAU,MAAM,KAAK,EAAiB,gBAC7C,EAAO,QAAQ,MACb,KAAM,EAAS,GAAG,KAClB,WAAY,EAAS,GAAG,aAE1B,EAAO,UAAU,EAAS,GAAG,cAExB,GAET,SAAU,SAAA,GAGR,OAFA,EAAM,kBAEC,GAET,UAAW,SAAA,GAET,OADA,EAAM,kBACC,IAGX,EAAiB,iBAAiB,GAClC,EAAO,UAAU,EAAiB;;;aC5xBtC,OAAO,QAAQ,OAAO,mBAAmB,WAAW,aAClD,SACA,cACA,WACA,YACA,SAAS,EAAQ,EAAa,EAAU,GACtC,IAAI,EAAQ,EAAS,SAAS,UAAU,KAExC,EAAY,SACZ,EAAO,MACL,MAAO,GACP,SAAU,IAEZ,EAAO,WAAa,WAClB,EAAY,MAAM,EAAO,KAAK,MAAO,EAAO,KAAK,UAAU,KACzD,WACE,EAAU,KAAK,UAEjB,SAAA,GACE,EAAM,YAAY,GAClB,EAAS,KAAK;;;aCpBxB,OAAO,QAAQ,OAAO,mBAAmB,WAAW,YAClD,SACA,eACA,sBACA,wBACA,SAAS,EAAQ,EAAc,GAC7B,EAAoB;;;0BCalB,EAAA,QAAY,OAAA,mBAAoB,WAAM,iBAAA,SAAA,WAAA,aAAA,YAAA,cAAA,YAAA,iBAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACpC,EAAO,eAAW,KAAY,WADhC,EAAA,SAAA,EAAA,WAAA,WAKE,EAAA,MAAW,WADb,EAAA,SAAA,SAKE,EAAA,OAAW,WAGP,EAAA,SAEI,QACG,KAAA,WASD,EAAA,KAAU,EAAV,UAAA,UAAA,gBAAA,GAAA,UAAA,OAAA,UAAA,MAAA,4BAAA,YAAA,QAAA,KAAA,WAZN,EAcI,KAdJ,WAHJ,iBAsBA,EAAA,eACG,SADH,GAGI,EAAI,SAAY,QACb,KAAA,WAMH,IAAA,EAAe,EAAW,UACxB,UAAW,gBAAA,GAAA,UAAA,OAAA,UAAA,MAAA,yCAAA,YAAA,GACT,EAAA,KAAU,GAAK,KAAA,WACb,EAAA,MACA,UAAU,sBACV,SAAQ,EAAe,IAAA,4BACvB,OAAA,EAAA,QAAqB,QAJR,SAAA,MAKb,qBALa,EAMb,YAAY,EANd,YAAA,SAAA,cAAA,WAAA,KAAA,YAAA,MAZR,iBAkCE,EAAA,WACA,KAAA,kBAHc,OAKhB,EAAA,iBAEE,KAAA,UAPJ,OAAA,EAAA,YAmBA,WAAO,cAAP,SAAA,cAAA,YAAA,sBAAA,aAAA,SAAA,EAAA,EAAA,EAAA,EAAA,GACA,EAAO,SAAP,kBAGE,EAAO,eAAW,KAAY,WAC9B,EAAO,SAAP,EAAA,WAAA,SAFF,EAAA,WAAA,IAME,EAAA,OAAA,WADF,EAAA,KAAA,WAIE,EAAA,UAAW,WADb,EAAA,SAAA,QAOI,EAAI,UACJ,GAAA,uBACA,KAAK,kBACH,KACA,YAAO,EACP,MAAM,kBACN,KAAA,YACA,MAAA,GACA,cAAA,aACE,gBACA,SAAQ,eACR,OAAA,cAHc,WAAA,kBAUlB,GAAA,qBACA,KAAK,gBACH,KACA,YAAO,EACP,MAAM,gBACN,KAAA,YACA,cAAA,aACE,gBACA,SAAQ,oBACR,OAAA,mBAHc,WAAA,uBAUlB,GAAA,iBACA,KAAK,YACH,KACA,YAAO,EACP,MAAM,YACN,KAAA,YACA,cAAA,aACE,gBACA,SAAA,iBAFc,WAAA,oBASpB,IAAA,IAAA,EAAA,EAAA,EAAA,EAAoB,QAApB,OAAyC,IAC1C,EAAA,cAAA,EAAA,QAAA,OAUL,IAAA,EAA2B,SAA3B,EAAA,EAAA,EAAA,EAAA,GACA,EAAO,kBAAe,WACpB,EAAA,aAAO,WADT,EAAA,kBAAA,QAIE,EAAA,aAAO,WADT,EAAA,kBAAA,YAKE,EAAA,OAAU,WADZ,EAAA,UAIE,EAAA,iBACA,gBAFuB,GAGvB,SAAA,GAHF,iBAAA,IAME,EAAA,QAAS,SAAW,GADtB,EAAA,WAAA,WAAA,4BAME,EAAI,gBAAW,SAAf,EAAA,EAAA,GACA,IAAA,EAAO,EAAA,QAFT,OAQM,EAAA,kBAAA,gBAAA,EAAA,EAAA,EAAA,EAAA,WANJ,EAQE,WACE,SAAS,GATb,EAAA,OAAA,KAFF,EAAA,SAkBE,EAAI,YAAc,SAAlB,EAAA,GACA,IAAA,EAAO,EAAA,QAFT,OAOM,EAAI,kBAAc,YAAlB,EAAA,EAAA,EAAA,SAAA,GACA,IAAA,EAAS,SAAQ,GANrB,EAQE,QAAc,IACZ,SAAS,GATb,EAAA,OAAA,KAFF,EAAA,SAkBE,EAAI,qBAAwB,SAAA,EAAA,GAC1B,GAAA,EAAW,OAAX,CACA,IAAA,EACG,EAAY,WAEX,EAAA,YACG,EADH,SAES,EACL,iBAAgB,KAHpB,WAOI,EAAA,gBAAA,EAAsB,SAAtB,EAAqC,gBAArC,EAAA,UAAA,KAAA,WACA,EAAS,UAAW,EAAA,SAAA,EAAA,UACpB,EAAA,WAAA,4CATJ,EAUY,QACX,EAAO,UACZ,EAAA;;;aC5PN,OAAO,QACJ,OAAO,eAAgB,mBAAoB,eAAgB,kBAC3D,WAAW,eACV,SACA,aACA,mBACA,YACA,YACA,SAAS,EAAQ,EAAY,EAAkB,EAAW,GACxD,EAAO,SAAW,EAClB,EAAO,SACP,EAAO,WACP,EAAO,cAAgB,EAUvB,EAAO,aAAe,SAAC,EAAI,EAAM,EAAK,EAAK,GACzC,IACW,cAAP,GAA6B,cAAP,IACtB,EAAK,MACQ,QAAb,EAAK,MACG,KAAV,EAAI,GAEJ,OAAO,EAGT,GAAI,EAAK,SAAS,OAAS,EAAI,SAAS,MAAO,OAAO,EAEtD,IAAY,cAAP,GAA6B,cAAP,IAAuB,GAAQ,EAAK,KAAM,CACnE,GAAI,QAAQ,8CAA+C,CAQzD,IANA,IAAI,EAAW,OAAO,WAAW,SAAS,EAAI,SAAS,OACnD,OAAA,EACA,EACF,EAAiB,mBAAmB,EAAK,SAAS,QAChD,EAAW,OAAO,WAAW,SAAS,EAAM,OAEvC,EAAI,EAAG,EAAI,EAAS,OAAQ,IACnC,GAAI,EAAS,GAAG,KAAK,KAAK,OAAS,EAAK,SAAS,MAAO,CACtD,EAAS,EAAS,GAClB,MAIJ,IAAK,IAAa,EAAQ,OAAO,EAEjC,GAAI,GAAY,EAAU,CAIxB,IAHA,IAAI,EAAY,EAAO,KAAK,MACxB,EAAiB,EACjB,EAAI,EACD,EAAS,IAAI,IAClB,EAAY,EAAiB,IAAM,EAAI,IACvC,IAEE,GAAa,EAAO,KAAK,OAAO,EAAO,KAAK,IAAI,GAEtD,GACQ,aAAN,GACC,GAAY,GAAkB,aAAN,EAEzB,IAAK,EAAI,EAAG,EAAI,EAAS,OAAQ,IAAK,CAEpC,GADQ,EAAS,IACR,EAAQ,CACf,EAAS,OAAO,EAAG,GACf,EAAI,GAAK,IACb,OAMN,OADA,EAAS,OAAO,GAAM,KACf,EAET,OAAO,EAET,OAAO,GAGT,EAAO,YAAc,SAAA,GAiBnB,IAhBA,IAAI,EAAO,OAAO,gBAAgB,iBAChC,iBACA,GAEE,EAAyB,SAAC,EAAM,GAClC,OAAO,WACL,IAAI,GACF,KAAM,EACN,gBAAiB,EAAK,SAAS,MAC/B,MAAO,GAET,EAAI,OAAO,KAIX,KACK,EAAI,EAAG,EAAI,EAAK,OAAQ,IAAK,CACpC,IAAI,EAAM,EAAK,GACf,EAAI,EAAI,OACN,MAAO,EAAI,MACX,KAAM,EAAI,KACV,OAAQ,EAAuB,EAAM,IAGzC,OAAO,GAGT,EAAO,UACL,QACE,KAAM,gBAER,eAAgB,EAAO,cAEzB,IAAI,EAAsB,EAAiB,SACzC,qBACA,WACE,EAAiB,cAAc,EAAO,SAAS,KAAK,SAAA,GAClD,EAAO,MAAQ,EAAI,KACnB,EAAO,QAAU,EAAI,YAI3B,EAAO,IAAI,WAAY,GAEvB,EAAO,YAAc,SAAC,EAAG,GACvB,EAAO,cAAgB,EAAK,KAAK,SACjC,EAAiB,YAAY,EAAO,QAAS,IAE/C,EAAO,iBAAmB,SAAC,EAAG,GAC5B,EAAiB,iBAAiB,EAAO,QAAS,IAEpD,EAAO,WAAa,SAAA,GAClB,IAAI,EAAO,OAAO,EAAE,EAAM,QAAQ,QAAQ,MAC1C,EAAiB,WAAW,EAAO,QAAS,EAAK,GAAG,KAGtD,EAAiB,OACjB,EAAiB,cAAc,EAAO,SAAS,KAAK,SAAA,GAClD,EAAO,MAAQ,EAAI,KACnB,EAAO,QAAU,EAAI;;;aChJ7B,OAAO,QACJ,OAAO,kBACP,UAAU,WAAY,WACrB,OACE,OACE,QAAS,WACT,OAAQ,eAEV,KAAM,SAAS,EAAO,GACpB,IAAI,KAEJ,GADA,EAAQ,KAAK,YAAa,QACtB,EAAM,OAAQ,CAChB,IAAI,EAAwB,SAAC,EAAK,GAChC,OAAO,SAAA,GACL,OAAO,EAAM,OAAO,GAAK,EAAO,EAAM,WAI1C,IAAK,IAAI,KAAO,EAAM,OACpB,GAAI,EAAM,OAAO,eAAe,GAAM,CACpC,IAAI,GACF,GAAI,EAAsB,EAAK,GAC/B,IAAK,GAEP,EAAO,KAAK,GACZ,EAAQ,GAAG,EAAK,EAAI,IAGxB,EAAM,IAAI,WAAY,WACpB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,OAAQ,IACjC,EAAQ,IAAI,EAAO,GAAG,IAAK,EAAO,GAAG,WAOhD,UAAU,aAAc,WACvB,OACE,OACE,OAAQ,qBAEV,KAAM,SAAS,EAAO,GACpB,IAAI,KACJ,GAAI,EAAM,OAAQ,CAChB,IAAI,EAAwB,SAAC,EAAK,GAChC,OAAO,SAAA,GACL,OAAO,EAAM,OAAO,GAAK,EAAO,KAGpC,IAAK,IAAI,KAAO,EAAM,OACpB,GAAI,EAAM,OAAO,eAAe,GAAM,CACpC,IAAI,GACF,GAAI,EAAsB,EAAK,GAC/B,IAAK,GAEP,EAAO,KAAK,GACZ,EAAQ,GAAG,EAAK,EAAI,IAGxB,EAAM,IAAI,WAAY,WACpB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,OAAQ,IACjC,EAAQ,IAAI,EAAO,GAAG,IAAK,EAAO,GAAG;;;0BCjDnD,IAAA,EAAS,EAAU,QACjB,OAD2B,uBAGzB,EAAI,UAAJ,UAAA,QAAA,SAAA,GACA,IAAI,KACF,GACA,SAAA,KACE,cAAa,SAAc,EAAA,GACzB,OAAI,EAAO,IAAA,GAAH,KAAA,SAAA,GADV,GAAA,EAAA,EAAA,SAMA,cAAM,SAAa,EAAA,EAAA,EAAA,GACjB,GAAA,EAAA,YAAiB,CAUf,GATF,EAAO,QAAO,EAAA,YAAd,MAAA,KACA,EAAO,KAAK,EAAA,yDAGV,EAAO,QAAQ,QAAO,UAAtB,IACA,EAAO,MAAM,EAAQ,UACtB,EAAA,MAAA,IAAA,EAAA,cAGC,EAAS,QAAT,QAAA,WAAA,EAAA,CACA,IAAI,GAAE,EAGA,mBADD,EAAA,OACC,KAAA,UAIA,EAAA,MAAA,yEAAQ,OAAA,GAAA,QAAA,SAAA,GACN,GACD,aAAA,GAEC,EAAA,WAAY,WADT,EAAL,QAAA,GAAA,OAAA,EAAA,OAAA,QATJ,OAiBF,EAAO,QAAP,QAAyB,aAAzB,IACA,EAAO,SAAS,EAAA,aACjB,EAAA,SAAA,qBAAA,GAGC,EAAM,QAAA,QAAiB,gBAAA,GACrB,EAAA,kBAGI,EAAA,YAAA,EAAA,qBAGF,IAAO,EAAA,2BACR,EAAA,YAAA,aAAA,QAE4B,GAA3B,EAAA,sBACE,EAAA,YAAiB,MAAA,SAAA,GADnB,OAAA,EAAA,MAAA,EAAA,sBAAA,CAAA,IAKE,EAAI,YAAW,MAAA,SAAoB,GAEnC,MAAA,mBAAW,EAAA,EAAA,iBAAX,EAAA,EAAA,iBAAA,GAHF,EAAA,EAAA,mBAUJ,EAAM,QAAW,QAAA,UAAA,GACf,EAAA,YACD,EAAA,MAAA,EAAA,EAAA,YAID,EAAM,QAAS,QAAA,QAAA,GACb,EAAA,UACD,EAAA,IAAA,EAAA,EAAA,UA5EK,OAAA,GAkFV,aAAM,SAAY,EAAA,EAAA,GAChB,GAAA,EAAI,WAEF,IADF,IAAA,EAAS,EAAT,WAAoB,MAAM,KACpB,EAAA,EAAS,EAAA,EAAb,OAAyB,IACvB,GAAA,EAAA,GAAA,OAAA,EAAA,CAEA,IAAI,EAAI,EAAQ,GAAZ,MAAJ,KAA0B,GACxB,EAAM,QAAM,KAAZ,IACD,GAAA,WAED,IAAA,EAAQ,EAAO,GAAf,MAAA,KAAA,GACD,EAAA,GAAA,EAAA,EAAA,MAKL,YAAM,SAAW,EAAA,EAAA,GACf,GAAA,EAAI,UAEF,IADF,IAAA,EAAS,EAAT,UAAoB,MAAM,KACpB,EAAA,EAAS,EAAA,EAAb,OAAyB,IACvB,GAAA,EAAI,GAAM,OAAS,EAAA,CACnB,IAAI,EAAK,EAAA,GAAS,MAAM,KAAf,GACT,EAAQ,EAAO,GAAf,MAAA,KAAA,GACD,EAAA,GAAA,EAAA,EAAA,MAKL,KAAA,SAAA,EAAA,EAAA,GAEE,EAAI,EAAA,kBAIJ,SACE,EAAA,WACD,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,KAAA,EAAA,EAAA,YAID,EAAE,SAAU,EAAE,SAAY,EAAA,SAAQ,cAAlC,kDAGU,QAAR,EAAA,SACE,EAAA,cAAA,EAAA,QAAA,SAAA,GACA,EAAA,KAAA,GAFF,EAAA,KAAA,EAAA,EAAA,EAAA,KAKsB,QAAd,EAAA,SACN,EAAA,cAAmB,EAAA,QAAnB,SAAA,GACA,EAAA,KAAA,KAAmB,EAFrB,EAAA,KAAA,EAAA,EAAA,EAAA,KAOE,SADA,EAAE,UAEA,EAAA,OAAO,EAAA,UAAA,SAAA,GACL,IACA,EAAO,KAAK,KAAO,EAAA,EAAA,WACnB,EAAA,EAAQ,GAAR,OAAmB,WACpB,EAAA,KAAA,EAAA,EAAA,EAAA,MAIL,GAGA,EAAA,KAAA,KAAmB,EAAnB,EAAsB,WAfjB,EAgBA,KAAM,EAAA,EAAN,EAAgB,IACd,EAAP,WACE,EAAK,KAAE,MACP,IAAA,EAAM,SACJ,KAAA,SAAO,GACL,OADF,GAAA,KAAA,EAAA,GAAA,EAAA,GAAA,KAML,EAAA,KAAA,EAAA,EAAA,EAAA,OAIH,KAAA,SAAQ,EAAR,EAAA,EAAA,GACA,EAAO,cAAY,EAAZ,EAAmB,EAAA,GAC1B,EAAA,EAAQ,EAAA,GAAA,OAAR,GACA,EAAQ,aAAR,EAAA,EAAA,GACD,EAAA,YAAA,EAAA,EAAA,KA5KP,OAAA;;;0BCVE,SAAO,YACL,OACA,QAAO,UACL,OAHG,gBAAA,cAMH,KAAA,SAAQ,EAAY,EAAY,EAAS,GACvC,EAAA,YAAO,UAAoB,SAAA,GAD7B,OAAA,GAAA,EAAA,iBAIE,EAAA,OAAQ,kBAAR,WADF,EAAA,qCAUA,EAAA,QAAO,OAAA,kBAAA,UAAA,UAAA,WACL,OACA,SAAA,IACA,YAAY,4BAHd,WAAA,iBAWA,UAAO,eAAA,sBAAA,WAAA,SAAA,EAAA,GACL,OACA,SAAO,IACL,OAHG,WAAA,SAML,SAAA,EAEA,SAAM,wFACJ,KAAA,SAAA,GACE,EAAI,aAAA,KAAA,WACF,IAAA,EAAa,SAAA,EAAA,GACX,OAAA,WADF,EAAA,YAAA,EAAA,OAKA,EAAS,YAAM,SAAA,GACb,EAAK,WACH,IAAA,IAAI,EAAA,EAAS,EAAA,EAAb,OAAA,IAAA,CACA,IAAI,EAAQ,EAAO,GACjB,EAAO,QACP,EAAA,OAAA,EAIA,EACW,iBACF,EAAA,EAAA,IAAgB,EAAA,IAAA,GAAhB,EAAqC,KAC/C,EAAA,EAAA,IAAA,EAAA,IAAA,MAAA,EAAA,EAAA,OAGL,KAhBF,EAAA,WAAA,WA0BN,UAAO,gBAAgB,SAAhB,SAAgC,GACrC,OAAI,SAAK,EAAa,EAAA,GACtB,IAAA,EAAQ,EAAK,EAAA,cACX,EAAM,KAAA,cAAkB,SAAA,GACtB,EAAA,OAAM,WACN,EAAG,iBACD,EAAA,GADF,OAAA,YAWN,UAAY,YAEV,WACA,SAAa,oBAAS,WACpB,KAAA,MAAW,KAAA,UAAe,SAAQ,EAAQ,GAC1C,IAAI,EAAA,EAAW,QAAO,QAAQ,EAAQ,SAAvB,MACf,EAAa,EAAA,QAAA,QAAA,eAKX,OAJA,EAAA,KACA,SAAS,QAFX,QAAA,OAMI,KAAI,SAAc,GAClB,IAAA,EAAA,EAAgB,QAChB,EAAS,OAAI,iCACb,EAAK,IAAO,GACZ,EAAA,OAAY,GACZ,EAAI,GAAA,SACF,IACA,IAAI,EAAa,EAAM,SAAN,YAAA,QACjB,IAAA,EAAiB,MAAA,EACjB,EAAO,QAAK,GACZ,MAAA,GALF,EAMU,OAAA,GACR,QACD,EAAA,SAEF,OAAA,EAAA;;;aCrHb,OAAO,QACJ,OAAO,kBACP,QAAQ,oBACP,WACE,IAAI,EAAM,EACN,GACF,IAAK,EACL,QAAS,WAGP,OAFA,EAAM,EAAM,MACV,EAAM,IACD,GAET,aAAc,WACZ,OAAO,GAET,SAUF,OANA,EAAM,QAAU,OAAO,GACpB,OAAO,QACP,OAAO,OACP,KAAK,QAAS,mBACd,MAAM,UAAW,MAEb,KAGV,UAAU,iBACT,mBACA,SAAS,GAiBP,OAfE,SAAU,KACV,KAAM,SAAS,EAAG,GAEhB,IAAI,EAAM,EAAiB,UACvB,EAAO,OAAO,EAChB,6DACE,EACA,+HACA,EACA,qBAEJ,EAAiB,KAAK,GAAO,EAC7B,OAAO,EAAE,GAAG,OAAO;;;aC5C7B,OAAO,QAAQ,OAAO,iBAAiB,QAAQ,eAC7C,KACA,eACA,SACA,QACA,SAAS,EAAI,EAAc,EAAQ,GACjC,IAAI,KACA,GACF,SAAU,GACV,SAAU,IAER,GAAe,EACnB,EAAQ,UAAY,SAAC,EAAU,GAC7B,EAAK,SAAW,EAChB,EAAK,SAAW,EAChB,OAAO,aAAa,QAAQ,iBAAkB,KAAK,KAAK,UAAU,MAEpE,EAAQ,SAAW,WACjB,IAAI,EAAQ,OAAO,aAAa,QAAQ,kBAIxC,OAHI,IACF,EAAO,KAAK,MAAM,KAAK,KAElB,GAET,EAAQ,OAAS,WACM,IAAjB,EAAK,WACP,EAAQ,UAAU,GAAI,IACtB,SAAS,WAIb,EAAQ,MAAQ,SAAC,EAAU,GACzB,IAAI,EAAW,EAAG,QA6ClB,OA3CA,EAAM,IAAI,kBAAc,EAAW,MAAQ,GAAU,KACnD,SAAS,GACP,IAAI,EAAI,SAAS,EAAK,MAClB,EAAI,EACR,IAAU,GAAN,EAAJ,CAwBA,IAdA,EAAa,QACX,UACE,EACA,IACA,EACA,IACA,EAAO,cACP,IACA,EAAO,eACP,KAEJ,EAAQ,UAAU,EAAU,GAC5B,GAAe,EACf,EAAS,UACJ,EAAI,EAAG,EAAI,EAAiB,OAAQ,IACvC,EAAiB,GAAG,UAEtB,SA3BA,CAIE,IADA,EAAS,OAFC,oDAGL,EAAI,EAAG,EAAI,EAAiB,OAAQ,IACvC,EAAiB,GAAG,SAEtB,OAsBJ,WAGE,EAAS,OAFC,yDAGV,IAAK,IAAI,EAAI,EAAG,EAAI,EAAiB,OAAQ,IAC3C,EAAiB,GAAG,SAEtB,OAGG,EAAS,SAGlB,EAAQ,aAAe,WACrB,OAAO,GAET,IAAI,KASJ,OARA,EAAQ,aAAe,WACrB,IAAI,EAAW,EAAG,QAIlB,OAHoB,GAAhB,EACF,EAAS,UACJ,EAAiB,KAAK,GACtB,EAAS,SAGX;;;aC5FX,OAAO,QACJ,OAAO,gBACP,QAAQ,uBACP,KACA,UACA,iBACA,aACA,WACA,SAAS,EAAI,EAAS,EAAgB,EAAY,GAChD,IAAI,GACF,UAEI,KAAM,MACN,UAEI,YAAY,EACZ,MAAO,kBACP,KAAM,YACN,MAAO,GACP,cAAe,aACf,gBACE,SAAU,eACV,WAAY,iBAId,YAAY,EACZ,MAAO,gBACP,KAAM,YACN,cAAe,aACf,gBACE,SAAU,oBACV,WAAY,yBAiBpB,EAAW,EACX,GACJ,KAAe,WACG,GAAZ,KACF,EAAW,IAAI,OAAO,aAAa,EAAQ,OAAO,EAAE,eAC3C,kBAAkB,aAAc,SAAS,EAAW,GAC3D,IAAI,EAAU,EAAU,aACF,IAAlB,EAAM,UACR,EAAQ,OACR,EAAS,EAAQ,WAAjB,CAA6B,KAE7B,EAAQ,KACN,8CACE,EAAM,WACN,cACA,EAAe,IAAI,EAAM,UACzB,UAEJ,EAAS,EAAQ,WAAjB,CAA6B,MAIjC,EAAS,OACT,OAAO,QAAQ,QAAQ,GAAS,KAAK,SAAU,WAC7C,EAAS,eAEX,EAAW,MAAM,wBAIrB,WAAqB,WACnB,OAAO,EAAG,SAAS,GACjB,EAAW,IAAI,qBAAsB,WACnC,SAKN,YAAsB,SAAA,GACpB,EAAS,KAAK,aAAa,GAAG,SAAS,IAGzC,iBAA2B,SAAC,EAAS,GACnC,EAAS,iBAAiB,EAAS,IAGrC,UACA,mBACA,cAAwB,SAAA,GACtB,EAAQ,OAAO,KAAK,GACpB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAQ,gBAAgB,OAAQ,IAClD,EAAQ,gBAAgB,GAAG,EAAQ,SAGvC,UAAoB,WAClB,OAAO,EAAQ,QAEjB,YAAsB,SAAA,GACpB,GAAuC,IAAnC,EAAQ,gBAAgB,OAK1B,OAJA,EAAQ,gBAAgB,KAAK,QACA,GAAzB,EAAQ,OAAO,QACjB,EAAG,EAAQ,SAKf,IADA,IAAI,GAAQ,EACH,EAAI,EAAG,EAAI,EAAQ,gBAAgB,OAAQ,IAClD,GAAI,EAAQ,gBAAgB,KAAO,EAAI,CACrC,GAAQ,EACR,OAGU,IAAV,GAAiB,EAAQ,gBAAgB,KAAK,KAGpD,OAAO,KAGV,QAAQ,aAAc,WACrB,IAAI,EAAM,EACV,OACE,IAAK,WAEH,OADS;;;aCnIjB,OAAO,QAAQ,OAAO,iBAAiB,QAAQ,gBAC7C,KACA,SAAS,GACP,IAAI,GACJ,KAAe,EAEf,QAAkB,SAAS,GACzB,EAAQ,KAAO,OAAO,WAAW,QAAQ,IAE3C,MAAgB,SAAS,EAAO,GAC9B,IAAI,EAAW,EAAG,QAYlB,OAXA,OAAO,WAAW,MAChB,EAAQ,KACR,EACA,EACA,SAAS,GACP,EAAS,QAAQ,IAEnB,WACE,EAAS,WAGN,EAAS,SAElB,KAAe,SAAS,GACtB,IAAI,EAAW,EAAG,QAWlB,OAVA,OAAO,WAAW,KAChB,EAAQ,KACR,EACA,SAAS,GACP,EAAS,QAAQ,IAEnB,WACE,EAAS,WAGN,EAAS,SAElB,UAAoB,SAAS,EAAW,EAAkB,GAExD,OAAO,WAAW,UAChB,EAAQ,KACR,EACA,SAAS,GACP,EAAiB,IAGnB,WACE,OAMN,WAAqB,SAAS,GAC5B,IAAI,EAAW,EAAG,QAWlB,OAVA,OAAO,WAAW,WAChB,EAAQ,KACR,EACA,SAAS,GACP,EAAS,QAAQ,IAEnB,WACE,EAAS,WAGN,EAAS,SAElB,YAAsB,SAAS,EAAM,EAAU,EAAM,GACnD,OAAO,OAAO,WAAW,YACvB,EAAQ,KACR,EACA,EACA,EACA,KAGJ,OAAO;;;0BCjEP,EAAA,QAAA,OAAA,iBAAA,QAAA,oBAAA,KAAA,wBAAA,aAAA,WAAA,sBAAA,SAAA,EAAA,EAAA,EAAA,EAAA,cAGA,KAAK,YAAL,EACA,KAAK,MAAL,EACA,KAAK,GAAA,EACL,KAAI,sBACJ,IAAA,wBAGE,KAAA,eAAgB,SAAc,EAA9B,GACA,IAAI,EAAW,EAAA,GACb,GAAA,EACE,IAAA,IAAI,EAAA,EAAU,EAAI,EAAU,OAAV,IACnB,EAAA,IAAA,EAAA,GAAA,IAIH,KAAA,SAAI,SAAY,EAAc,GAC9B,IAAI,EAAY,EAAA,GAMd,OALA,IACA,EAAY,MACb,EAAA,EAAA,IAED,EAAO,KAAA,GACD,WACJ,IAAI,EAAA,EAAwB,QAAA,IAChB,IAAV,IACD,EAAA,GAAA,QAIH,KAAA,WAAgB,SAAA,EAAc,GAC9B,IAAI,EAAA,EAAkB,GAClB,EAAA,EAAwB,QAAA,IAChB,IAAV,IACD,EAAA,GAAA,OAID,KAAA,KAAO,WAEH,OAAI,EAAiB,OAAA,KAAA,SAAA,GACnB,GAAA,EAAK,QACL,EAAK,MAAA,EACL,EAAK,YAAW,EACd,EAAA,MAAK,KAAA,WADP,EAAA,eAAA,0BAMF,eAK+C,KAAA,aAAA,SAAA,EAAA,iEAEjD,EAAA,KAAW,QAAA,EAAM,WAAA,aAAA,EAAA,KAAA,OAMjB,EAAQ,WAAA,SAAA,EAAA,KAAA,OACN,GACA,MAAA,EAAW,WAAA,SAAA,EAAA,KAAA,OAFb,UAAA,IAME,EAAA,KAAA,SAAQ,GACN,GACA,MAAA,EAFF,WAAA,MAXA,WAAK,WADP,EAAA,aAAA,EAAA,GAAA,IAGA,MAkBF,KAAA,kBAAmB,SAAA,GACjB,OAAA,IAAK,QAAA,SAAkB,GADzB,EAAA,aAAA,EAAA,MAMA,KAAA,SAAI,SAAW,GACf,IAAA,EAAK,EAAA,QAFP,OAGI,EAAI,kBAAJ,EAAA,MAAA,KAAA,SAAA,GACA,IAAI,EAAA,EAAA,MACA,EAAG,EAAA,UACL,GAEI,GAAK,EAAA,KAAL,WADF,EAAA,eAAA,wBAGF,GALF,EAMO,QAAS,IATlB,EAAA,WAFF,EAAA,SAyBE,KAAA,uBAAA,SAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAW,EAAA,QAVb,OAWI,WAAS,WADX,EAAA,QAAA,EAAA,kBAAA,EAAA,EAAA,EAAA,EAAA,EAAA,KAKA,KAfF,EAAA,SAsCK,KAAA,kBAAA,SAAA,EAAA,GAAA,IAHH,EAGG,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,MAFH,EAEG,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,OADH,EACG,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GADM,iEAGL,OAAA,EACJ,KAGE,IAAA,EAAO,YAAK,EAAA,WACV,aACA,EACA,YAMH,OAAA,EAAA,uBAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAGC,IAAA,IAAI,KAAI,EAAR,CACA,IAAI,EAAE,EAAS,GACb,GAAA,EAAA,OAAA,EAAA,YAAA,EAAA,MAAA,GAAA,EAAA,QAAA,EAAA,CACA,EAAA,EACD,OAID,IAEE,GACA,MAAI,EAAK,WACT,GAAA,EAAQ,GACR,OAAM,EACN,KAAA,EACE,OADK,OAAA,IAKT,EACE,MAIQ,GAAR,QAAA,IAAA,EAAA,EAAA,KAAA,GAAA,EAAA,EAAA,IAAA,MAAA,UACD,EAAA,MAAA,QAAA,IAIH,EAAA,KAAQ,GACR,EAAK,EAAA,IAAA,EACL,EAAI,mBAAkB,EAAlB,IAAA,EAaF,IAZA,IAAA,EAAY,SAAA,EAAA,EAAA,EAAA,GACV,OAAA,SAAY,GADd,OAAA,EAAA,kBAAA,EAAA,EAAA,EAAA,EAAA,KAAA,MAAA,EAAA,IAAA,KAYI,EAAI,EAAR,EAAA,EAAA,OAAA,IAAA,CACA,IAAI,EAAE,EAAM,GAER,aADF,EAAA,MAAS,WACF,OAER,EAAA,KAAA,EAAA,SAAA,GAAA,KAAA,EAAA,EAAA,EAAA,EAAA,KAGD,OAAA,EAAO,IAAA,GAAA,KAAA,WACL,OACA,KAAA,EAFF,QAAA,MAQF,KAAA,iBAAkB,SAAa,EAAQ,GACvC,EAAK,EAAA,KAAA,SAAmB,IAAK,MAAK,EAAS,KAAI,MAFjD,EAAA,mBAAA,EAAA,KAAA,SAAA,IAAA,MAAA,EAAA,KAAA,OAMA,KAAK,WAAa,aAChB,KAAA,WAAS,SAAe,EAAO,GAC7B,EAAK,aAAY,EAAA,WACR,SAAA,EAAW,SAAS,QAG9B,EAAA,YAAA,gBAAA,EAAA,WAAA,SAAA,EAAA,SAAA,OAAA,EAAA,sBAAA,KAGD,KAAA,qBAAoB,SAAY,EAAA,GAC9B,EAD8B,aAE9B,YAAO,EACP,MAAM,gBACN,KAAA,YACA,cAAA,aACE,gBACA,SAAQ,oBACR,OAAA,mBAHc,WAAA,sBAOhB,EACE,WAGA,EAAK,aAAY,EAAA,WACR,SAAA,EAAW,SAAS,QAG9B,EAAA,YAAA,gBAAA,EAAA,WAAA,SAAA,EAAA,SAAA,OAAA,EAAA,sBAAA,OAIH,KAAA,UAAe,SAAP,EAAA,EAAgC,GACxC,IAAI,EAAG,EAAA,WAAA,SAAA,EAAA,SAAA,OACL,GAAA,EAAI,CAIF,IAHF,IAAI,EAAA,EACA,EAAJ,EAAA,QAAA,aAAA,IACA,EAAO,EACL,EAAA,IAAA,IACA,EAAA,EAAA,IAAA,EAAA,IACD,IAEF,EAAA,SAAA,EAAA,IAAA,EAAA,aAGD,KAAA,mBAAmB,SAAnB,GADF,EAAA,YAAA,GAKE,KAAA,eAAgB,SAAK,GACnB,IAAA,IAAI,KAAK,EAAA,mBAEV,GAAA,EAAA,mBAAA,GAAA,IAAA,EAAA,OAAA,EAAA,mBAAA,GAJH,OAAA,GAQE,KAAA,sBAAA,SAAA,GAIE,IAHF,IAAI,KACJ,EAAA,MAAA,KAAA,EAAA,SAAA,UAEM,EAAA,EAAS,EAAA,EAAb,OAAA,IAAA,CACA,IAAI,EAAA,EAAe,GACnB,GAAI,KAAA,EAAJ,CACA,IAAI,EAAa,EAAA,eAAA,GACf,GACE,EAAA,MACA,KAAA,EAAY,KAFd,WAAA,EAAA,SATN,OAgBI,EAAA,MACA,KAAA,EAAA,KAFF,WAAA,EAAA,QAfF,GAuBE,KAAA,YACO,SACL,EAAO,GAEP,EAAK,aAAY,EAAA,WACR,SAAA,EAAW,KAAlB,SAAgC,QAGnC,EAAA,YAAA,gBAAA,EAAA,WAAA,SAAA,EAAA,KAAA,SAAA,OAAA,EAAA,sBAAA,EAAA,QAID,KAAA,aAAe,SAAW,EAAS,GACnC,IAAI,EAAG,EAAA,WAAA,SAAA,EAAA,SAAA,OACL,GAAA,EAAI,CACJ,IAAI,EAAO,EAAP,EAAkB,SAAS,QAC7B,GAAA,EAAI,WAAW,SAAO,EAAW,OAE/B,IADF,IAAA,EAAA,EAAoB,WAAS,SAAa,EAAA,OAEtC,EAAA,EAAA,EAAY,EAAU,OAAS,IAG/B,GAAA,EAAS,GAAA,KAAT,KAAoB,OAApB,EAAA,YAAA,EAAA,SAAA,MAAA,EAAA,GAAA,KAAA,MAAA,CACA,EAAA,WAAA,EAAA,IACD,SAOP,KAAA,sBAA2B,SAAU,EAArC,GACE,GAAmC,SAAnC,EAAI,MAAM,WAAN,OACF,GACe,GADf,EAAI,MACF,UAAO,MAAN,CAEH,IAAA,GAAK,EAAgB,MAAA,UAArB,MAAA,EAAA,MAAA,UAAA,OAAA,EAAA,MAAA,UAAA,MACD,EAAA,cAAA,IAAA,QAKG,IAAmB,gBAAnB,EAAA,MAAJ,WAAuB,OAAA,iBAAA,EAAA,MAAA,WAAA,QACrB,EAAQ,MAAM,MACZ,OAAA,EAAA,MAAA,MAAA,IAAA,OACE,KAAA,EACA,EAAA,cAAA,GACF,MACE,KAAA,EACA,EAAA,cAAA,GACF,MACE,KAAA,EACA,EAAA,cAAA,GACF,MACE,KAAA,EACA,EAAA,cAAA,GACF,MACE,KAAA,EACA,EAAA,cAAA,GACF,MACE,KAAA,EACA,EAAA,cAAA,GACF,MACE,KAAA,EACA,EAAA,cAAA,GACF,MACE,KAAA,EACF,MACE,KAAA,EACA,EAAK,cAAL,IACA,EAAA,OAAA,IAOR,IAiCA,EAAA,SAAA,EAAA,GACA,IAAA,EAAA,EAAA,QAFF,OA9BI,SAAO,uBAAwB,EAAM,EACrC,GACA,IAAA,EAAA,YAAiB,EAAA,WAAA,aAAA,EAAA,YACf,WAAA,WADF,uBAAA,EAAA,EAAA,IAJF,SAQM,CACF,IAAA,GACA,KAAA,EAAY,KAAA,MACZ,WAAY,EAAM,MAAA,WAHT,MAIT,WAAO,EAAW,WAJpB,MAAA,EAAA,KAAA,UAOE,EAAI,gBAAJ,iBAAuB,GAAA,KAAA,SAAA,GACrB,GAAU,IAAV,EAAI,OAAM,CACR,IAAA,GACA,KAAM,KAAA,MACN,KAAA,EAAQ,KAAA,SAHV,OAAA,aAMD,EAAA,gBAAA,SAAA,EAAA,GAGD,EAAK,WAAL,EAAA,GAAA,aAGA,EAAA,sBAAA,EAAA,GAdF,EAAA,QAAA,MAqBF,CAAA,EAAA,EAAA,GAHF,EAAA,SAraJ,OA4aM,KAAA,eAAmB,SAAK,GACtB,OAAK,EAAM,OAAA,KAAU,WACnB,EAAM,WACN,EAAM,SAAQ,EAAK,MACjB,EAAA,QADiB,MAEjB,KAAA,OAFF,WAAA,EAAA,MAAA,cAQA,IADF,IAAA,KACM,EAAI,EAAM,EAAA,EAAN,SAAR,OAAA,IAAA,CACA,IAAE,EAAK,EAAA,SAAA,GACR,EAAA,KAAA,EAAA,EAAA,IAbH,OAAA,EAAA,IAAA,MAmBA,KAAA,cAAO,SAAiB,GACtB,OAAA,EAAO,OAAK,KAAA,WADd,OAAA,EAAA,kBAAA,EAAA,EAAA,UAMF,KAAK,oBACL,KAAK,iBAAL,EACA,KAAK,kBACL,KAAK,oBACH,KAAA,eAAoB,SAAK,GACvB,IAAA,IAAI,EAAK,EAAA,EAAA,EAAA,iBAA8B,OAAA,IACxC,GAAA,EAAA,iBAAA,IAAA,EAAA,OAHH,EAAA,iBAAA,KAAA,IAQE,KAAA,aAAK,SAAmB,GACxB,EAAI,iBACF,EAHJ,EAAA,eAAA,EAAA,cAAA,UAAA,EAAA,mBAME,KAAA,iBAAqB,SAArB,GADF,EAAA,cAAA,GApdJ;;;aCAA,OAAO,QAAQ,OAAO,iBAAiB,QAAQ,yBAC7C,KACA,eACA,SACA,cACA,SAAS,EAAI,EAAc,EAAQ,GACjC,IAAI,GACJ,MAAgB,EAChB,MAAgB,GAEZ,KAEJ,SAAS,OAAO,GACd,IAAK,IAAI,EAAI,EAAG,EAAI,EAAU,OAAQ,IACpC,EAAU,GAAG,OAAO,GA+DxB,OArDA,EAAQ,KAAO,WACb,OAAO,EAAY,eAAe,KAChC,WACE,IAAI,EAAW,EAAG,QAClB,GAAqB,GAAjB,EAAQ,OAEV,GADA,EAAU,KAAK,GACU,IAArB,EAAU,OAAc,CAC1B,IAAI,EAAO,EAAY,WAGvB,EACG,KAAK,cAAgB,EAAK,UAC1B,KACC,SAAA,GAEE,OADA,EAAQ,MAAQ,EACT,EAAa,KAAK,eAG3B,WACE,IAAI,EACF,iCAAwC,EAAK,SAC/C,QAAQ,MAAM,GAEd,OAAO,KAGV,KACC,SAAA,GACE,EAAQ,MAAQ,EAlChC,SAAiB,GACf,IAAK,IAAI,EAAI,EAAG,EAAI,EAAU,OAAQ,IACpC,EAAU,GAAG,QAAQ,GAmCT,CAAQ,EAAQ,QAElB,WACE,IAAI,EAAM,gCACV,QAAQ,MAAM,GACd,OAAO,WAKV,EAAS,QAAQ,EAAQ,OAChC,OAAO,EAAS,SAElB,WACE,IACI,EAAM,iCADC,EAAY,WACgC,SACvD,QAAQ,MAAM,GACd,OAAO,MAKN",
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()",
    "window.angular.module(\"settings\", []).constant(\"config\", {\n  main_path: \"/\",\n  spinalhub_url: \"127.0.0.1\",\n  spinalhub_port: \"8888\",\n  spinalhub_user: \"168\"\n});\n",
    "window.angular.module(\"app.route\", [\"ngRoute\"]);\nwindow.angular.module(\"app.services\", []);\nwindow.angular.module(\"app.directives\", []);\nwindow.angular.module(\"app.controllers\", []);\nwindow.angular.module(\"app.spinalcom\", [\"settings\", \"ngMaterial\"]);\nwindow.angular.module(\"app.spinal-panel\", []);\n\nwindow.angular\n  .module(\"SpinalApp\", [\n    \"ngAnimate\",\n    \"ngMaterial\",\n    \"app.directives\",\n    \"app.route\",\n    \"jsTree.directive\",\n    \"app.sidebar\",\n    \"app.FileExplorer\",\n    \"app.services\",\n    \"app.controllers\",\n    \"ngMdIcons\",\n    \"settings\",\n    \"app.spinalcom\",\n    \"app.spinal-panel\"\n  ])\n  .run([\n    \"$rootScope\",\n    \"$location\",\n    \"authService\",\n    function($rootScope, $location, authService) {\n      let user = authService.get_user();\n      $rootScope.$on(\"$routeChangeStart\", function(event, next) {\n        if (next.$$route.authenticate) {\n          if (!authService.is_Connected()) {\n            authService.login(user.username, user.password).then(\n              function() {},\n              function() {\n                $location.path(\"/login\");\n              }\n            );\n          }\n        }\n      });\n    }\n  ])\n\n  .config([\n    \"$mdThemingProvider\",\n    function($mdThemingProvider) {\n      $mdThemingProvider\n        .theme(\"altTheme\")\n        .primaryPalette(\"grey\", {\n          default: \"200\"\n        })\n        .accentPalette(\"grey\", {\n          default: \"700\"\n        })\n        .dark();\n      $mdThemingProvider.theme(\"default\").dark();\n\n      $mdThemingProvider.setDefaultTheme(\"altTheme\");\n      $mdThemingProvider.theme(\"error-toast\");\n      $mdThemingProvider.alwaysWatchTheme(true);\n    }\n  ])\n  .run([\n    \"$templateCache\",\n    \"$http\",\n    function($templateCache, $http) {\n      let load_template = (uri, name) => {\n        $http.get(uri).then(\n          response => {\n            $templateCache.put(name, response.data);\n          },\n          () => {\n            console.log(\"Cannot load the file \" + uri);\n          }\n        );\n      };\n      let toload = [\n        {\n          uri: \"app/templates/sideBar.html\",\n          name: \"sideBar.html\"\n        },\n        {\n          uri: \"app/templates/inspector.html\",\n          name: \"inspector.html\"\n        },\n        {\n          uri: \"app/templates/FileExplorer.html\",\n          name: \"FileExplorer.html\"\n        },\n        {\n          uri: \"app/templates/changePasswordModal.html\",\n          name: \"changePasswordModal.html\"\n        }\n      ];\n      for (var i = 0; i < toload.length; i++) {\n        load_template(toload[i].uri, toload[i].name);\n      }\n\n      // $templateCache.put('templateId.html', 'This is the content of the template');\n    }\n  ]);\n",
    "angular.module('app.route')\n  .config([\"$routeProvider\", \"$locationProvider\",\n    function ($routeProvider, $locationProvider) {\n      $routeProvider\n        .when(\"/home\", {\n          templateUrl: \"app/templates/main.html\",\n          authenticate: true,\n          controller: 'mainCtrl'\n        })\n        .when(\"/login\", {\n          templateUrl: \"app/templates/login.html\",\n          authenticate: false,\n          controller: 'loginCtrl'\n        })\n\n        .otherwise({\n          redirectTo: '/home'\n        });\n    }\n  ]);",
    "window.angular\n  .module(\"app.FileExplorer\", [\n    \"jsTree.directive\",\n    \"app.services\",\n    \"app.spinalcom\",\n    \"ngMaterial\",\n    \"md.data.table\"\n  ])\n  .controller(\"FileExplorerCtrl\", [\n    \"$scope\",\n    \"$rootScope\",\n    \"spinalFileSystem\",\n    \"$mdDialog\",\n    \"authService\",\n    \"$compile\",\n    \"$injector\",\n    \"layout_uid\",\n    function(\n      $scope,\n      $rootScope,\n      spinalFileSystem,\n      $mdDialog,\n      authService,\n      $compile,\n      $injector,\n      layout_uid\n    ) {\n      $scope.injector = $injector;\n      $scope.uid = layout_uid.get();\n      $scope.curr_dir = 0;\n      $scope.lastSelected = 0;\n      $scope.fs_path = [];\n\n      $scope.onFocus = () => {\n        spinalFileSystem.FileExplorer_focus($scope);\n      };\n      $scope.onFocus();\n      $scope.directory = [];\n      $scope.user = authService.get_user();\n\n      $scope.fsmoveToParent = dir => {\n        let idx = $scope.fs_path.indexOf(dir);\n        $scope.fs_path.splice(idx + 1);\n        let f = window.FileSystem._objects[dir._server_id];\n        if (f) {\n          if (f instanceof File) {\n            f.load(m => {\n              if (m) {\n                $scope.change_curr_dir(m, $scope.fs_path);\n              }\n            });\n          } else if (f instanceof window.Directory) {\n            $scope.change_curr_dir(f, $scope.fs_path);\n          }\n        }\n      };\n      $scope.getIcon = type => {\n        return window.spinalDrive_Env.context_file_exp_app_icon[type]\n          ? window.spinalDrive_Env.context_file_exp_app_icon[type]\n          : window.spinalDrive_Env.context_file_exp_app_icon.default;\n      };\n\n      $scope.selectFile = (event, file) => {\n        if (event.ctrlKey == false) {\n          for (var i = 0; i < $scope.directory.length; i++) {\n            $scope.directory[i].selected = false;\n            $scope.directory[i].over = false;\n            $scope.directory[i].selectdrop = false;\n          }\n          console.log(file);\n        }\n        file.selected = !file.selected;\n      };\n      $scope.ondblclick = file => {\n        if (file.model_type == \"Directory\") {\n          let f = window.FileSystem._objects[file._server_id];\n          if (f) {\n            $scope.directory = [];\n            f.load(m => {\n              if (m) {\n                $scope.fs_path.push({\n                  name: file.name,\n                  _server_id: file._server_id\n                });\n                $scope.change_curr_dir(m, $scope.fs_path);\n              }\n            });\n          }\n        }\n      };\n\n      $scope.getStyle = file => {\n        return `fill: ${file.error ? \"#ff5722\" : \"white\"}; height: 24px;`;\n      };\n      $scope.getTime = model => {\n        return new Date(model.get()).toLocaleString();\n      };\n\n      $scope.change_curr_dir = (dir, path) => {\n        $scope.curr_dir = dir;\n        $scope.fs_path = path;\n        handleDirectoryFiles();\n      };\n\n      function handleDirectoryFiles() {\n        return spinalFileSystem.getFolderFiles($scope).then(res => {\n          let i = 0;\n          let find_idx_in_dir = (res, i) => {\n            return res.findIndex(elem => {\n              return $scope.directory[i]._server_id == elem._server_id;\n            });\n          };\n          while (i < $scope.directory.length) {\n            if (find_idx_in_dir(res, i) == -1) {\n              $scope.directory.splice(i, 1);\n              i = 0;\n            } else i++;\n          }\n          let found = false;\n          for (i = 0; i < res.length; i++) {\n            found = false;\n            for (var y = 0; y < $scope.directory.length; y++) {\n              if ($scope.directory[y]._server_id === res[i]._server_id) {\n                $scope.directory[y].name = res[i].name;\n                $scope.directory[y].model_type = res[i].model_type;\n                $scope.directory[y].owner = res[i].owner;\n                $scope.directory[y].last_modified = res[i].last_modified;\n                $scope.directory[y].version = res[i].version;\n                if (res[i].upload_pecent)\n                  $scope.directory[y].upload_pecent = res[i].upload_pecent;\n                else $scope.directory[y].upload_pecent = res[i].upload_pecent;\n                if (res[i].error) $scope.directory[y].error = res[i].error;\n                else if ($scope.directory[y].error)\n                  $scope.directory[y].error = false;\n                found = true;\n                break;\n              }\n            }\n            if (found == false) {\n              $scope.directory.splice(y, 0, res[i]);\n            }\n          }\n        });\n      }\n      let listener_destructor = spinalFileSystem.subcribe(\n        \"SPINAL_FS_ONCHANGE\",\n        handleDirectoryFiles\n      );\n      $scope.$on(\"$destroy\", listener_destructor);\n\n      $scope.enterTarget = 0;\n      $scope.getNbSelectedIcon = type => {\n        let nb_selected = 0;\n        for (var i = 0; i < $scope.directory.length; i++) {\n          if ($scope.directory[i].selected) nb_selected++;\n        }\n\n        if (nb_selected == 1) {\n          return $scope.getIcon(type);\n        } else if (nb_selected <= 9) {\n          return \"filter_\" + nb_selected;\n        }\n        return \"filter_9_plus\";\n      };\n\n      $scope.dragCfg = {\n        dragstart: (event, obj) => {\n          if (obj.selected == false && event.ctrlKey != true) {\n            for (let i = 0; i < $scope.directory.length; i++) {\n              $scope.directory[i].selected = false;\n            }\n          }\n          obj.selected = true;\n          let clone = window.$(\n            '<div id=\"drag-extra\" class=\"fs-drag-item\"><ng-md-icon icon=\"' +\n              $scope.getNbSelectedIcon(obj.model_type) +\n              '\" style=\"fill: white;height: 24px;\" class=\"md-avatar-icon\"></ng-md-icon>' +\n              '<div style=\"float: left;margin-left: 20px;width: -webkit-fill-available;overflow: hidden;text-overflow: ellipsis;\">' +\n              '<span style=\"white-space: nowrap;\">' +\n              obj.name +\n              \"</span></div></div>\"\n          );\n          $compile(clone[0])($rootScope);\n          clone.appendTo(\"body\");\n          event.dataTransfer.setDragImage(clone[0], 0, 0);\n          event.dataTransfer.setData(\"text\", obj._server_id);\n          spinalFileSystem.FE_selected_drag = [];\n          for (let i = 0; i < $scope.directory.length; i++) {\n            if ($scope.directory[i].selected == true) {\n              $scope.directory[i].selectdrop = true;\n              spinalFileSystem.FE_selected_drag.push($scope.directory[i]);\n            }\n          }\n          spinalFileSystem.FE_init_dir_drag = $scope.curr_dir;\n          spinalFileSystem.FE_fspath_drag = $scope.fs_path;\n\n          spinalFileSystem.addScopeVisted($scope);\n          $rootScope.current_scope_drag = $scope;\n          $scope.$apply();\n          return false;\n        },\n        dragend: () => {\n          window.$(\"#drag-extra\").remove();\n          for (let i = 0; i < $scope.directory.length; i++) {\n            $scope.directory[i].selectdrop = false;\n            $scope.directory[i].over = false;\n          }\n          $scope.enterTarget = 0;\n          $scope.dropOnFolder = false;\n\n          for (var i = 0; i < spinalFileSystem.FE_visited_scope.length; i++) {\n            let scope = spinalFileSystem.FE_visited_scope[i];\n            for (var j = 0; j < scope.directory.length; j++) {\n              if (scope.directory[j].over == true) {\n                scope.directory[j].over = false;\n                break;\n              }\n            }\n            scope.dropOnFolder = false;\n            scope.$apply();\n          }\n          spinalFileSystem.FE_visited_scope = [];\n          return false;\n        },\n        dragenter: event => {\n          event.preventDefault();\n        },\n        dragover: (event, obj) => {\n          event.preventDefault();\n          event.stopPropagation(); // Stops some browsers from redirecting.\n          if (obj._server_id == $scope.enterTarget._server_id) return false;\n          if (obj.selected == true || obj.model_type != \"Directory\") {\n            $scope.enterTarget = 0;\n          } else {\n            $scope.enterTarget = obj;\n          }\n          for (let i = 0; i < $scope.directory.length; i++) {\n            $scope.directory[i].over = false;\n          }\n          if ($scope.enterTarget) {\n            event.dataTransfer.dropEffect = \"move\";\n            event.dataTransfer.effectAllowed = \"move\";\n            obj.over = true;\n          }\n          $scope.dropOnFolder = false;\n          $scope.$apply();\n          spinalFileSystem.addScopeVisted($scope);\n          for (var i = 0; i < spinalFileSystem.FE_visited_scope.length; i++) {\n            let scope = spinalFileSystem.FE_visited_scope[i];\n            if (scope != $scope) {\n              for (var j = 0; j < scope.directory.length; j++) {\n                if (scope.directory[j].over == true) {\n                  scope.directory[j].over = false;\n                  break;\n                }\n              }\n              scope.dropOnFolder = false;\n              scope.$apply();\n            }\n          }\n        },\n        drop: event => {\n          event.stopPropagation(); // Stops some browsers from redirecting.\n          event.preventDefault();\n          let curr_dir = spinalFileSystem.FE_init_dir_drag;\n          let target = 0;\n          let i = 0;\n          for (; i < $scope.directory.length; i++) {\n            if ($scope.directory[i].over) {\n              target = $scope.directory[i];\n              break;\n            }\n          }\n          if (!target || target.model_type != \"Directory\") return false;\n          let files = event.target.files;\n          if (!files || files.length === 0)\n            files = event.dataTransfer\n              ? event.dataTransfer.files\n              : event.originalEvent.dataTransfer.files;\n          if (files.length > 0) {\n            // dnd files\n            let m_tar = window.FileSystem._objects[target._server_id];\n            if (m_tar) {\n              $scope.upload_files(files, m_tar);\n            }\n            $scope.dropOnFolder = false;\n            $scope.$apply();\n\n            return false;\n          }\n          if (!target || target.model_type != \"Directory\") return false;\n          let selected = spinalFileSystem.FE_selected_drag;\n          let m_tar = window.FileSystem._objects[target._server_id];\n          if (m_tar) {\n            let src_full_path = spinalFileSystem.FE_fspath_drag.concat(\n              selected\n            );\n            let target_full_path = $scope.fs_path.concat(target);\n\n            for (var idx = 0; idx < src_full_path.length; idx++) {\n              let src_dir = src_full_path[idx];\n              let dir_found = false;\n              for (var y = 0; y < target_full_path.length; y++) {\n                let tar_dir = target_full_path[y];\n                if (tar_dir._server_id == src_dir._server_id) {\n                  dir_found = true;\n                  break;\n                }\n              }\n              if (!dir_found) {\n                break;\n              }\n            }\n            if (src_full_path.length <= idx) {\n              return false;\n            }\n            for (i = 0; i < selected.length; i++) {\n              let s = window.FileSystem._objects[selected[i]._server_id];\n              if (s) curr_dir.remove_ref(s);\n            }\n            if (m_tar) {\n              m_tar.load(m => {\n                for (var i = 0; i < selected.length; i++) {\n                  let s = window.FileSystem._objects[selected[i]._server_id];\n                  if (s) m.push(s);\n                }\n              });\n            }\n          }\n          return false;\n        }\n      };\n      $scope.upload_files = (files, directory_target) => {\n        if (files.length > 0) {\n          for (var i = 0; i < files.length; i++) {\n            let file = files[i];\n            let filePath = new window.Path(file);\n            $scope.get_unused_name(file.name, directory_target);\n            directory_target.add_file(file.name, filePath);\n          }\n        }\n      };\n      $scope.get_unused_name = (name, directory_target, idx) => {\n        let found = false;\n        for (let i = 0; i < directory_target.length; i++) {\n          if (directory_target[i].name.get() == name) found = true;\n        }\n        if (found == true) {\n          if (!idx) {\n            idx = 0;\n            name += \"(\" + idx + \")\";\n          } else ++idx;\n          let reg = /\\(\\d+\\)$/gm;\n          name = name.replace(reg, \"(\" + idx + \")\");\n          return $scope.get_unused_name(name, directory_target, idx);\n        }\n        return name;\n      };\n\n      $scope.folderDropCfg = {\n        drop: event => {\n          event.stopPropagation(); // Stops some browsers from redirecting.\n          event.preventDefault();\n          var files = event.target.files;\n          if (!files || files.length === 0)\n            files = event.dataTransfer\n              ? event.dataTransfer.files\n              : event.originalEvent.dataTransfer.files;\n          if (files.length > 0) {\n            // dnd files\n            let m_tar = $scope.curr_dir;\n            $scope.upload_files(files, m_tar);\n            $scope.dropOnFolder = false;\n            $scope.$apply();\n            return false;\n          }\n          let curr_dir = spinalFileSystem.FE_init_dir_drag;\n          if (curr_dir == $scope.curr_dir) return false;\n          let selected = spinalFileSystem.FE_selected_drag;\n\n          let m_tar = $scope.curr_dir;\n          if (m_tar) {\n            let src_full_path = spinalFileSystem.FE_fspath_drag.concat(\n              selected\n            );\n            let target_full_path = $scope.fs_path;\n\n            for (var idx = 0; idx < src_full_path.length; idx++) {\n              let src_dir = src_full_path[idx];\n              let dir_found = false;\n              for (var y = 0; y < target_full_path.length; y++) {\n                let tar_dir = target_full_path[y];\n                if (tar_dir._server_id == src_dir._server_id) {\n                  dir_found = true;\n                  break;\n                }\n              }\n              if (!dir_found) {\n                break;\n              }\n            }\n            if (src_full_path.length <= idx) {\n              return false;\n            }\n            for (let i = 0; i < selected.length; i++) {\n              let s = window.FileSystem._objects[selected[i]._server_id];\n              if (s) curr_dir.remove_ref(s);\n            }\n            for (var i = 0; i < selected.length; i++) {\n              let s = window.FileSystem._objects[selected[i]._server_id];\n              if (s) m_tar.push(s);\n            }\n          }\n          $scope.dropOnFolder = false;\n          return false;\n        },\n        dragover: event => {\n          event.preventDefault();\n          for (var i = 0; i < $scope.directory.length; i++) {\n            if ($scope.directory[i].over == true) {\n              $scope.directory[i].over = false;\n              break;\n            }\n          }\n          $scope.enterTarget = 0;\n          $scope.dropOnFolder = true;\n          spinalFileSystem.addScopeVisted($scope);\n          for (i = 0; i < spinalFileSystem.FE_visited_scope.length; i++) {\n            let scope = spinalFileSystem.FE_visited_scope[i];\n            if (scope != $scope) {\n              for (var j = 0; j < scope.directory.length; j++) {\n                if (scope.directory[j].over == true) {\n                  scope.directory[j].over = false;\n                  break;\n                }\n              }\n              scope.dropOnFolder = false;\n              scope.$apply();\n            }\n          }\n          $scope.$apply();\n          return false;\n        },\n        dragenter: event => {\n          event.preventDefault();\n          return false;\n        }\n      };\n\n      handleDirectoryFiles();\n\n      $scope.context_menu_file = [];\n      $scope.onrightclick = index => {\n        setTimeout(() => {\n          window.$(\"#fe-menu-\" + $scope.uid + \"-\" + index).click();\n        });\n      };\n\n      $scope.open_context_menu_file = ($mdMenu, ev, file) => {\n        $scope.context_menu_file = window.spinalDrive_Env.get_applications(\n          \"FileExplorer\",\n          {\n            file: file,\n            scope: $scope\n          }\n        );\n        $mdMenu.open(ev);\n      };\n      $scope.context_menu_file_action = ($event, item, file) => {\n        item.launch_action({\n          evt: $event,\n          item: item,\n          file: file,\n          scope: $scope\n        });\n      };\n\n      $scope.context_menu_curr_dir = [];\n\n      $scope.open_context_menu_curr_dir = ($mdMenu, ev) => {\n        $scope.context_menu_curr_dir = window.spinalDrive_Env.get_applications(\n          \"FileExplorerCurrDir\",\n          {\n            scope: $scope,\n            model: $scope.curr_dir\n          }\n        );\n        $mdMenu.open(ev);\n      };\n      $scope.context_menu_curr_dir_action = ($event, item) => {\n        item.launch_action({\n          evt: $event,\n          item: item,\n          model: $scope.curr_dir,\n          scope: $scope\n        });\n      };\n    }\n  ]);\n",
    "window.angular.module(\"app.FileExplorer\").controller(\"InspectorCtrl\", [\n  \"$scope\",\n  \"$injector\",\n  \"spinalInspectUID\",\n  \"authService\",\n  \"$mdToast\",\n  \"$interval\",\n  \"spinalFileSystem\",\n  \"$timeout\",\n  function(\n    $scope,\n    $injector,\n    spinalInspectUID,\n    authService,\n    $mdToast,\n    $interval,\n    spinalFileSystem,\n    $timeout\n  ) {\n    $scope.injector = $injector;\n    $scope.fs_path = [];\n    let svgGroup, rootnode, draw, update, centerNode, textGrp;\n    let tree_idx = 0;\n    let depthLength = [];\n    let viewerWidth = 50;\n    let viewerHeight = 50;\n    let ptr_folow = [];\n    let animation_duration = 500;\n    let style = {\n      nodefill: {\n        empty: \"#fff\", // or atomic or unknown\n        ptrClosed: \"#f00\",\n        objClosed: \"#0010f2\",\n        lstClosed: \"#00ab00\",\n        ptrEmptyOrOpen: \"#f0a9a9\",\n        objEmptyOrOpen: \"#87ceeb\",\n        lstEmptyOrOpen: \"#7fffd4\"\n      }\n    };\n    let menu = d => {\n      let apps = window.spinalDrive_Env.get_applications(\"Inspector\", d);\n      let res = [];\n      let create_action_callback = app => {\n        return function() {\n          let share_obj = {\n            model_server_id: d.data._server_id,\n            scope: $scope\n          };\n          app.action(share_obj);\n        };\n      };\n\n      for (var i = 0; i < apps.length; i++) {\n        let app = apps[i];\n        res.push({\n          title: app.label,\n          action: create_action_callback(app)\n        });\n      }\n      return res;\n    };\n\n    let diagonal = (s, d) => {\n      let path = `M ${s.y} ${s.x}\n                C ${(s.y + d.y) / 2} ${s.x},\n                  ${(s.y + d.y) / 2} ${d.x},\n                  ${d.y} ${d.x}`;\n      return path;\n    };\n    let zoom = () => {\n      if (window.d3.event.transform != null) {\n        svgGroup.attr(\"transform\", window.d3.event.transform);\n      }\n    };\n    let calc_dist_depth = (depth, mult) => {\n      let i = 0;\n      let res = 0;\n      while (i < depth) {\n        res += depthLength[i] * 2;\n        ++i;\n      }\n      res += depthLength[depth];\n      res *= mult;\n      return res;\n    };\n    window.angular.element(document).ready(function() {\n      let uid = spinalInspectUID.get_last_uid();\n      let elem = spinalInspectUID.elem[uid];\n      viewerWidth = elem.width();\n      viewerHeight = elem.height();\n      let elem_id = \"spinalinspect_\" + uid;\n      let element = window.d3.select(\"#\" + elem_id);\n      let tree = window.d3.tree().size([viewerHeight, viewerWidth]);\n      let zoomListener = window.d3\n        .zoom()\n        .scaleExtent([0.1, 3])\n        .on(\"zoom\", zoom);\n      centerNode = function(d) {\n        let x, y;\n        let depth = d.depth + 1;\n        let scale = 1;\n        x = 0;\n        depth -= d.depth;\n        y = -d.x0;\n        let x_limit = 120;\n        while (x < x_limit) {\n          x = -rootnode.y0;\n          x = x * scale + viewerWidth / 2;\n          x = x - calc_dist_depth(depth, 6) / 2 * scale;\n          if (x < x_limit) scale -= 0.01;\n        }\n        x -= calc_dist_depth(d.depth, 6) * scale;\n        y = y * scale + viewerHeight / 2;\n        baseSvg\n          .transition()\n          .duration(animation_duration)\n          .call(\n            zoomListener.transform,\n            window.d3.zoomIdentity.translate(x, y).scale(scale)\n          );\n      };\n      element.select(\"svg\").remove();\n      let baseSvg = element\n        .append(\"svg\")\n        .attr(\"width\", viewerWidth)\n        .attr(\"height\", viewerHeight)\n        .classed(\"svg-content\", true)\n        .call(zoomListener);\n      baseSvg.on(\"dblclick.zoom\", null);\n\n      let centerrootbtn = window.d3.select(\n        \"#spinalinspect_btn_centerroot_\" + uid\n      );\n      centerrootbtn.on(\"click\", () => {\n        if (!rootnode) return;\n        centerNode(rootnode);\n      });\n      textGrp = baseSvg\n        .append(\"text\")\n        .attr(\"class\", \"nodeText\")\n        .attr(\"x\", viewerWidth / 2)\n        .attr(\"y\", viewerHeight / 2)\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"alignment-baseline\", \"central\")\n        .attr(\"fill\", \"#999\");\n      svgGroup = baseSvg.append(\"g\");\n\n      let onNodeClick = d => {\n        if (d.children) {\n          d._children = d.children;\n          d.children = null;\n        } else {\n          d.children = d._children;\n          d._children = null;\n        }\n        if (d.data.haveChild) {\n          if (!(d.children || d._children)) {\n            let m = window.FileSystem._objects[d.data._server_id];\n            if (m) {\n              if (m instanceof window.Ptr) {\n                m.load(ptr => {\n                  ptr.bind(onTreeChange, false);\n                  let res = {};\n                  ptr_folow.push(ptr);\n                  pushToJson(ptr, res, d, d.depth + 2, d.depth + 1);\n                  d.children = [res];\n                  d.data.children = d.children;\n                  update(d);\n                  centerNode(d);\n                });\n                return;\n              } else {\n                pushToJson(m, d, d.parent, d.depth + 1, d.depth, d.data.name);\n              }\n            }\n          }\n        }\n        update(d);\n        centerNode(d);\n      };\n      draw = () => {\n        baseSvg.attr(\"width\", viewerWidth).attr(\"height\", viewerHeight);\n        if (textGrp)\n          textGrp\n            .attr(\"x\", viewerWidth / 2)\n            .attr(\"y\", viewerHeight / 2)\n            .text(\n              'Please Drop file from \"File Explorer\" here to inspect them.'\n            );\n        if (!rootnode) return;\n        rootnode.x0 = viewerHeight / 2;\n        rootnode.y0 = 0;\n        update(rootnode);\n      };\n      let click_focus = d => {\n        centerNode(d);\n      };\n      update = source => {\n        let _tree = tree.size([viewerHeight, viewerWidth]);\n        let treemap = _tree(rootnode);\n        let nodes = treemap.descendants();\n        let links = treemap.descendants().slice(1);\n        nodes.forEach(d => {\n          if (!depthLength[d.depth]) depthLength[d.depth] = d.data.name.length;\n          else\n            depthLength[d.depth] = Math.max(\n              d.data.name.length,\n              depthLength[d.depth]\n            );\n        });\n        nodes.forEach(d => {\n          d.y = calc_dist_depth(d.depth, 6);\n        });\n\n        let node = svgGroup.selectAll(\"g.node\").data(nodes, d => {\n          return d.id || (d.id = ++tree_idx);\n        });\n\n        let nodeEnter = node\n          .enter()\n          .append(\"g\")\n          .attr(\"class\", \"node\")\n          .attr(\"transform\", () => {\n            return \"translate(\" + source.y0 + \",\" + source.x0 + \")\";\n          })\n          .on(\"mouseover\", node_mouseover)\n          .on(\"mousemove\", function(d) {\n            node_mousemove(d);\n          })\n          .on(\"mouseout\", node_mouseout);\n\n        nodeEnter\n          .append(\"circle\")\n          .attr(\"class\", \"nodeCircle\")\n          .attr(\"r\", 1e-6)\n          .on(\"contextmenu\", window.d3.contextMenu(menu))\n          .on(\"click\", onNodeClick);\n\n        nodeEnter\n          .append(\"text\")\n          .attr(\"x\", d => {\n            return d.children || d._children ? -10 : 10;\n          })\n          .attr(\"dy\", \".35em\")\n          .attr(\"class\", \"nodeText\")\n          .attr(\"text-anchor\", d => {\n            return d.children || d._children ? \"end\" : \"start\";\n          })\n          .text(d => {\n            return d.data.name;\n          })\n          .attr(\"fill\", \"#EEE\")\n          .on(\"click\", click_focus)\n          .on(\"contextmenu\", window.d3.contextMenu(menu));\n\n        var nodeUpdate = nodeEnter.merge(node);\n        nodeUpdate\n          .transition()\n          .duration(animation_duration)\n          .attr(\"transform\", function(d) {\n            return \"translate(\" + d.y + \",\" + d.x + \")\";\n          });\n\n        // Update the node attributes and style\n        nodeUpdate\n          .select(\"circle.nodeCircle\")\n          .attr(\"r\", 8)\n          .style(\"fill\", function(d) {\n            if (d.data.obj) {\n              if (d.data.haveChild && !(d.children || d._children)) {\n                return style.nodefill.objClosed;\n              }\n              if (d.children && d.children.length > 0)\n                return style.nodefill.objEmptyOrOpen;\n              if (!(d.children || d._children))\n                return style.nodefill.objEmptyOrOpen;\n              return style.nodefill.objClosed;\n            } else if (d.data.lst) {\n              if (d.data.haveChild && !(d.children || d._children)) {\n                return style.nodefill.lstClosed;\n              }\n              if (d.children && d.children.length > 0)\n                return style.nodefill.lstEmptyOrOpen;\n              if (!(d.children || d._children))\n                return style.nodefill.lstEmptyOrOpen;\n              return style.nodefill.lstClosed;\n            } else if (d.data.ptr) {\n              if (d.data.haveChild && !(d.children || d._children)) {\n                return style.nodefill.ptrClosed;\n              }\n              if (d.children && d.children.length > 0)\n                return style.nodefill.ptrEmptyOrOpen;\n              if (!(d.children || d._children))\n                return style.nodefill.ptrEmptyOrOpen;\n              return style.nodefill.ptrClosed;\n            }\n            return style.nodefill.empty; // default\n          })\n          .attr(\"cursor\", \"pointer\");\n\n        nodeUpdate\n          .select(\"text.nodeText\")\n          .attr(\"x\", d => {\n            return d.children ? -10 : 10;\n          })\n          .attr(\"text-anchor\", d => {\n            return d.children ? \"end\" : \"start\";\n          })\n          .text(d => {\n            return d.data.name;\n          });\n\n        let nodeExit = node\n          .exit()\n          .transition()\n          .duration(animation_duration)\n          .attr(\"transform\", () => {\n            return \"translate(\" + source.y + \",\" + source.x + \")\";\n          })\n          .remove();\n        nodeExit.select(\"circle\").attr(\"r\", 0);\n        nodeExit.select(\"text\").style(\"fill-opacity\", 0);\n        let link = svgGroup.selectAll(\"path.link\").data(links, d => {\n          return d.id;\n          // return d.target.id;\n        });\n        let linkEnter = link\n          .enter()\n          .insert(\"path\", \"g\")\n          .attr(\"class\", \"link\")\n          .attr(\"d\", () => {\n            let o = {\n              x: source.x0,\n              y: source.y0\n            };\n            return diagonal(o, o);\n          });\n\n        // UPDATE\n        let linkUpdate = linkEnter.merge(link);\n\n        // Transition back to the parent element position\n        linkUpdate\n          .transition()\n          .duration(animation_duration)\n          .attr(\"d\", d => {\n            return diagonal(d, d.parent);\n          });\n\n        // Remove any exiting links\n        link\n          .exit()\n          .transition()\n          .duration(animation_duration)\n          .attr(\"d\", () => {\n            let o = {\n              x: source.x,\n              y: source.y\n            };\n            return diagonal(o, o);\n          })\n          .remove();\n\n        // Store the old positions for transition.\n        nodes.forEach(d => {\n          d.x0 = d.x;\n          d.y0 = d.y;\n        });\n      };\n\n      // resize\n      let check_redraw = () => {\n        if (viewerWidth != elem.width() || viewerHeight != elem.height()) {\n          viewerWidth = elem.width();\n          viewerHeight = elem.height();\n          draw();\n        }\n      };\n\n      let interval_resize = setInterval(check_redraw, 600);\n      // let interval_resize = $interval(check_redraw, 600);\n      $scope.$on(\"$destroy\", function() {\n        // $interval.cancel(interval_resize);\n        clearInterval(interval_resize);\n        interval_resize = undefined;\n      });\n    });\n\n    let add_table_row = (table, key, value) => {\n      let tr = table.append(\"tr\");\n      tr.append(\"td\").text(key);\n      tr.append(\"td\").text(value);\n    };\n\n    function strncmp(a, b, n) {\n      return a.substring(0, n) == b.substring(0, n);\n    }\n\n    function node_mouseover(d) {\n      spinalInspectUID.tooltip\n        .transition()\n        .duration(300)\n        .style(\"opacity\", 1);\n      spinalInspectUID.tooltip.selectAll(\"table\").remove();\n      let table = spinalInspectUID.tooltip.append(\"table\");\n\n      add_table_row(table, \"Contructor\", d.data._constructor);\n      add_table_row(table, \"Server_id\", d.data._server_id);\n\n      let m = window.FileSystem._objects[d.data._server_id];\n      if (m) {\n        if (m instanceof window.Lst) {\n          add_table_row(table, \"Length\", m.length);\n        } else if (m instanceof window.Str) {\n          let data = m.get();\n          add_table_row(table, \"Data\", data);\n          add_table_row(table, \"Length\", m.length);\n          let imgtype = \"data:image/\";\n          if (strncmp(data, imgtype, imgtype.length)) {\n            let tr = table.append(\"tr\");\n            tr.append(\"td\").text(\"Preview\");\n            let img = tr.append(\"td\").append(\"img\");\n            img.attr(\"src\", data);\n            img.attr(\"alt\", \"preview\");\n            img.style(\"max-height\", 100);\n            img.style(\"max-width\", 100);\n          }\n        } else if (m instanceof window.Val) {\n          add_table_row(table, \"Value\", m.get());\n        } else if (m instanceof window.Ptr) {\n          add_table_row(table, \"Target Ptr\", m.data.value);\n          m.load(ptr => {\n            if (ptr)\n              add_table_row(table, \"Target Contructor\", ptr.constructor.name);\n          });\n        } else if (m instanceof window.TypedArray) {\n          add_table_row(table, \"Data\", m.get());\n        }\n      }\n    }\n\n    function node_mousemove() {\n      spinalInspectUID.tooltip\n        .style(\"left\", window.d3.event.pageX + \"px\")\n        .style(\"top\", window.d3.event.pageY + \"px\");\n    }\n\n    function node_mouseout() {\n      spinalInspectUID.tooltip\n        .transition()\n        .duration(300)\n        .style(\"opacity\", 1e-6);\n    }\n    let timeout_check_node = null;\n    let timeout_update_graph = null;\n    let onTreeChange = () => {\n      if (timeout_check_node) return;\n      // rootnode;\n      timeout_check_node = $timeout(() => {\n        timeout_check_node = null;\n        check_nodes_rec(rootnode, rootnode.data.name);\n        if (timeout_update_graph) return;\n        timeout_update_graph = $timeout(() => {\n          timeout_update_graph = null;\n          update(rootnode);\n        }, 500);\n      }, 500);\n    };\n    let check_nodes_rec = (n, name) => {\n      if (!(n && n.data && n.data._server_id)) return;\n      let m = window.FileSystem._objects[n.data._server_id];\n      if (m) {\n        // if (!m.has_been_modified()) return;\n        if (!name) name = n.data.name;\n        n.data._constructor = m.constructor.name;\n        n.data._server_id = m._server_id;\n        if (m instanceof window.Val || m instanceof window.Bool) {\n          n.data.name = n.data.name.replace(/ *= [.\\-\\w]*/g, \"\");\n          n.data.name += ` = ${m.get()}`;\n        } else if (m instanceof window.Str) {\n          let str = m.get();\n          if (str.length > 25) str = str.substring(0, 25) + \"...\";\n          n.data.name = n.data.name.replace(/ *= *\"*\\w*.*\"*/g, \"\");\n          n.data.data = `${name} = \"${m.get()}\"`;\n          n.data.name += ` = \"${str}\"`;\n        } else if (m instanceof window.TypedArray) {\n          n.data.name = n.data.name.replace(/ *= [0-9.e-]*/g, \"\");\n          n.data.name += ` = ${m._size}`;\n        } else if (m instanceof window.Ptr) {\n          n.data.ptr = m.data.value;\n          n.data.name = n.data.name.replace(/ *= *\"*\\w*\"*/g, \"\");\n          n.data.name += ` = \"${m.data.value}\"`;\n          n.data.haveChild = true;\n          let children = n.children || n._children;\n          if (!children) return; // children not charged yet\n          m.load(ptr => {\n            if (children[0].data._server_id == ptr._server_id) {\n              check_nodes_rec(children[0]);\n            }\n          });\n        } else if (m instanceof window.Lst) {\n          n.data.name = n.data.name.replace(/\\[[0-9]*\\]/g, \"\");\n          n.data.name += `[${m.length}]`;\n          n.data.lst = true;\n          if (m.length === 0) {\n            n.data.haveChild = false;\n          } else n.data.haveChild = true;\n          let children = n.children || n._children;\n          if (!children) {\n            // children not loaded yet\n            return;\n          }\n\n          for (let i = 0; i < m.length; i++) {\n            if (\n              children[i] &&\n              children[i].data &&\n              children[i].data._server_id &&\n              children[i].data._server_id === m[i]._server_id\n            ) {\n              check_nodes_rec(children[i]);\n            } else {\n              // check if already exist\n              let j = i;\n              let found = -1;\n              for (; j < children.length; j++) {\n                // children[j];\n                if (\n                  children[j] &&\n                  children[j].data &&\n                  children[j].data._server_id &&\n                  children[j].data._server_id === m[i]._server_id\n                ) {\n                  found = j;\n                  break;\n                }\n              }\n              // if exist splice to remove and add it to the right place\n              if (found != -1) {\n                let items = children.splice(j, 1);\n                if (items.length > 0) children.splice(i, 0, items[0]);\n              }\n              // if not exist create it\n              else {\n                let res = {};\n                pushToJson(m[i], res, n, n.depth + 1, n.depth + 1);\n                children.splice(i, 0, res);\n              }\n            }\n          }\n          if (m.length < children.length)\n            children.splice(m.length, children.length - m.length);\n          if (children.length === 0) {\n            n.children = n._children = n.data.children = n.data._children = null;\n          }\n        } else if (m instanceof window.Model) {\n          n.data.obj = true;\n          n.data.name = n.data.name.replace(/{[0-9]*}/g, \"\");\n          n.data.name += `{${m._attribute_names.length}}`;\n          let i = 0;\n          let children = n.children || n._children;\n          if (m._attribute_names.length === 0) {\n            n.data.haveChild = false;\n          } else n.data.haveChild = true;\n          if (!children) {\n            return; // children not loaded yet\n          }\n          for (i = 0; i < children.length; i++) {\n            children[i].data.used = false;\n          }\n          for (i = 0; i < m._attribute_names.length; i++) {\n            let model_child = m[m._attribute_names[i]];\n            let found = false;\n            for (let j = 0; j < children.length; j++) {\n              let child = children[j];\n              if (\n                child &&\n                child.data &&\n                child.data._server_id &&\n                model_child._server_id === child.data._server_id\n              ) {\n                child.data.used = true;\n                check_nodes_rec(child);\n                found = true;\n              }\n            }\n            if (found == false) {\n              let res = {};\n              pushToJson(model_child, res, n, n.depth + 1, n.depth + 1);\n              res.data.used = true;\n              children.push(res);\n            }\n          }\n          i = 0;\n          while (i < children.length) {\n            if (!children[i].data.used) {\n              children.splice(i, 1);\n              continue;\n            }\n            i++;\n          }\n        }\n      }\n    };\n    $scope.onFocus = () => {\n      spinalFileSystem.setlastInspector($scope);\n    };\n    $scope.set_model = model_id => {\n      for (var i = 0; i < ptr_folow.length; i++) {\n        ptr_folow[i].unbind(onTreeChange);\n      }\n      ptr_folow = [];\n      $scope.model = spinalFileSystem.lastfileSelected;\n      let m = window.FileSystem._objects[model_id];\n      if (m) {\n        ptr_folow.push(m);\n        m.bind(onTreeChange);\n        $scope.new_tree(m);\n      }\n    };\n\n    let pushToJson = (m, n, parent, max_depth = 1, depth = 0, name = null) => {\n      if (!m) return;\n      if (!name) name = m.constructor.name;\n      n.parent = parent;\n      n.depth = depth;\n      n.data = {};\n      n.data.name = name;\n      n.data._constructor = m.constructor.name;\n      n.data._server_id = m._server_id;\n\n      ++depth;\n      if (m instanceof window.Lst) {\n        n.data.name = n.data.name.replace(/\\[[0-9]*\\]/g, \"\");\n        n.data.name += `[${m.length}]`;\n        n.data.lst = true;\n        if (m.length == 0) {\n          n.data.haveChild = false;\n          return;\n        }\n        n.data.haveChild = true;\n        if (depth > max_depth) {\n          return;\n        }\n        n.children = [];\n        n.data.children = n.children;\n        for (let i = 0; i < m.length; i++) {\n          let res = {};\n          pushToJson(m[i], res, n, max_depth, depth);\n          n.children.push(res);\n        }\n      } else if (m instanceof window.Val || m instanceof window.Bool) {\n        n.data.name += ` = ${m.get()}`;\n      } else if (m instanceof window.Str) {\n        let str = m.get();\n        if (str.length > 25) str = str.substring(0, 25) + \"...\";\n        n.data.data = `${name} = \"${m.get()}\"`;\n        n.data.name += ` = \"${str}\"`;\n      } else if (m instanceof window.Ptr) {\n        n.data.haveChild = true;\n        n.data.ptr = m.data.value;\n        n.data.name += ` = \"${m.data.value}\"`;\n      } else if (m instanceof window.TypedArray) {\n        n.data.name += ` = ${m._size}`;\n      } else if (m instanceof window.Model) {\n        n.data.obj = true;\n        n.data.name = n.data.name.replace(/{[0-9]*}/g, \"\");\n        n.data.name += `{${m._attribute_names.length}}`;\n        if (depth > max_depth) {\n          if (m._attribute_names.length > 0) {\n            n.data.haveChild = true;\n          }\n          return;\n        }\n        n.children = [];\n        n.data.children = n.children;\n        for (var i = 0; i < m._attribute_names.length; i++) {\n          let res = {};\n          pushToJson(\n            m[m._attribute_names[i]],\n            res,\n            n,\n            max_depth,\n            depth,\n            m._attribute_names[i]\n          );\n          n.children.push(res);\n        }\n      }\n    };\n\n    let toJson = (\n      m,\n      n,\n      max_depth = 1,\n      depth = 0,\n      name = m.constructor.name\n    ) => {\n      n.name = name;\n      n._constructor = m.constructor.name;\n      n._server_id = m._server_id;\n\n      ++depth;\n      if (m instanceof window.Lst) {\n        n.name += `[${m.length}]`;\n        n.lst = true;\n        if (m.length == 0) return;\n        if (depth > max_depth) {\n          return;\n        }\n        n.haveChild = true;\n        n.children = [];\n        for (let i = 0; i < m.length; i++) {\n          let res = {};\n          toJson(m[i], res, max_depth, depth);\n          n.children.push(res);\n        }\n      } else if (m instanceof window.Val || m instanceof window.Bool) {\n        n.name += ` = ${m.get()}`;\n      } else if (m instanceof window.Str) {\n        let str = m.get();\n        if (str.length > 25) str = str.substring(0, 25) + \"...\";\n        n.data = `${name} = \"${m.get()}\"`;\n        n.name += ` = \"${str}\"`;\n      } else if (m instanceof window.Ptr) {\n        n.haveChild = true;\n        n.ptr = m.data.value;\n        n.name += ` = \"${m.data.value}\"`;\n      } else if (m instanceof window.TypedArray) {\n        n.name += ` = ${m._size}`;\n      } else if (m instanceof window.Model) {\n        n.obj = true;\n        n.name += `{${m._attribute_names.length}}`;\n        if (depth > max_depth) {\n          if (m._attribute_names.length > 0) {\n            n.haveChild = true;\n          }\n          return;\n        }\n        n.children = [];\n        for (var i = 0; i < m._attribute_names.length; i++) {\n          let res = {};\n          toJson(\n            m[m._attribute_names[i]],\n            res,\n            max_depth,\n            depth,\n            m._attribute_names[i]\n          );\n          n.children.push(res);\n        }\n      }\n    };\n\n    $scope.new_tree = model => {\n      if (!model) return;\n      if (textGrp) textGrp.remove();\n      textGrp = null;\n      let res = {};\n      toJson(model, res);\n      rootnode = window.d3.hierarchy(res, function(d) {\n        return d.children;\n      });\n      if (draw) {\n        draw();\n        centerNode(rootnode);\n      }\n    };\n\n    $scope.folderDropCfg = {\n      drop: event => {\n        event.stopPropagation(); // Stops some browsers from redirecting.\n        event.preventDefault();\n        let selected = spinalFileSystem.FE_selected_drag;\n        if (selected && selected[0]) {\n          // change to multiple selection later\n          $scope.fs_path = Array.from(spinalFileSystem.FE_fspath_drag);\n          $scope.fs_path.push({\n            name: selected[0].name,\n            _server_id: selected[0]._server_id\n          });\n          $scope.set_model(selected[0]._server_id);\n        }\n        return false;\n      },\n      dragover: event => {\n        event.preventDefault();\n\n        return false;\n      },\n      dragenter: event => {\n        event.preventDefault();\n        return false;\n      }\n    };\n    spinalFileSystem.setlastInspector($scope);\n    $scope.set_model(spinalFileSystem.lastfileSelected);\n  }\n]);\n",
    "window.angular.module(\"app.controllers\").controller(\"loginCtrl\", [\n  \"$scope\",\n  \"authService\",\n  \"$mdToast\",\n  \"$location\",\n  function($scope, authService, $mdToast, $location) {\n    let toast = $mdToast.simple().hideDelay(3000);\n    // let user = authService.get_user();\n    authService.logout();\n    $scope.conf = {\n      email: \"\",\n      password: \"\"\n    };\n    $scope.ConnectBtn = () => {\n      authService.login($scope.conf.email, $scope.conf.password).then(\n        () => {\n          $location.path(\"/home\");\n        },\n        err => {\n          toast.textContent(err);\n          $mdToast.show(toast);\n        }\n      );\n    };\n  }\n]);\n",
    "window.angular.module(\"app.controllers\").controller(\"mainCtrl\", [\n  \"$scope\",\n  \"$routeParams\",\n  \"goldenLayoutService\",\n  \"spinalModelDictionary\",\n  function($scope, $routeParams, goldenLayoutService) {\n    goldenLayoutService.init();\n  }\n]);\n",
    "window.angular\n  .module(\"app.controllers\")\n  .controller(\"RightMenuCtrl\", [\n    \"$scope\",\n    \"$timeout\",\n    \"$mdSidenav\",\n    \"$location\",\n    \"authService\",\n    \"$mdDialog\",\n    \"$templateCache\",\n    function(\n      $scope,\n      $timeout,\n      $mdSidenav,\n      $location,\n      authService,\n      $mdDialog,\n      $templateCache\n    ) {\n      authService.wait_connect().then(() => {\n        $scope.username = authService.get_user().username;\n      });\n\n      $scope.close = function() {\n        $mdSidenav(\"right\").close();\n      };\n\n      $scope.logOut = () => {\n        $mdSidenav(\"right\")\n          .close()\n          .then(function() {\n            $mdDialog\n              .show(\n                $mdDialog\n                  .confirm()\n                  .ariaLabel(\"confirm menu\")\n                  .ok(\"Confim\")\n                  .cancel(\"Cancel\")\n                  .title(\"Do you want to log out ?\")\n                  .targetEvent(event)\n              )\n              .then(\n                function() {\n                  $location.path(\"/login\");\n                },\n                function() {}\n              );\n          });\n      };\n      $scope.modifyPassword = function(event) {\n        $mdSidenav(\"right\")\n          .close()\n          .then(function() {\n            let my_prompt = $mdDialog\n              .confirm()\n              .ariaLabel(\"confirm menu\")\n              .ok(\"Confim\")\n              .cancel(\"Cancel\")\n              .title(\"Do you want to modify your password ?\")\n              .targetEvent(event);\n            $mdDialog.show(my_prompt).then(\n              function() {\n                $mdDialog.show({\n                  ariaLabel: \"changePasswordModal\",\n                  template: $templateCache.get(\"changePasswordModal.html\"),\n                  parent: window.angular.element(document.body),\n                  clickOutsideToClose: true,\n                  fullscreen: true,\n                  controller: [\n                    \"$scope\",\n                    \"authService\",\n                    \"$mdToast\",\n                    \"$q\",\n                    \"$mdDialog\",\n                    changePasswordModelCtrl\n                  ]\n                });\n              },\n              function() {}\n            );\n          });\n      };\n      $scope.menuList = [\n        {\n          name: \"Change Password\",\n          action: $scope.modifyPassword\n        },\n        {\n          name: \"Log out\",\n          action: $scope.logOut\n        }\n      ];\n    }\n  ])\n  .controller(\"navbarCtrl\", [\n    \"$scope\",\n    \"authService\",\n    \"$location\",\n    \"goldenLayoutService\",\n    \"$mdSidenav\",\n    function($scope, authService, $location, goldenLayoutService, $mdSidenav) {\n      $scope.username = \"\";\n      $scope.connected = false;\n\n      authService.wait_connect().then(() => {\n        $scope.username = authService.get_user().username;\n        $scope.connected = true;\n      });\n\n      $scope.logout = () => {\n        $location.path(\"/login\");\n      };\n      $scope.clickUser = () => {\n        $mdSidenav(\"right\").open();\n      };\n\n      // get in SpinalDrive_Env\n      $scope.layouts = [\n        {\n          id: \"drag-folder-explorer\",\n          name: \"Folder Explorer\",\n          cfg: {\n            isClosable: true,\n            title: \"Folder Explorer\",\n            type: \"component\",\n            width: 20,\n            componentName: \"SpinalHome\",\n            componentState: {\n              template: \"sideBar.html\",\n              module: \"app.sidebar\",\n              controller: \"sideBarCtrl\"\n            }\n          }\n        },\n\n        {\n          id: \"drag-file-explorer\",\n          name: \"File Explorer\",\n          cfg: {\n            isClosable: true,\n            title: \"File Explorer\",\n            type: \"component\",\n            componentName: \"SpinalHome\",\n            componentState: {\n              template: \"FileExplorer.html\",\n              module: \"app.FileExplorer\",\n              controller: \"FileExplorerCtrl\"\n            }\n          }\n        },\n\n        {\n          id: \"drag-inspector\",\n          name: \"Inspector\",\n          cfg: {\n            isClosable: true,\n            title: \"Inspector\",\n            type: \"component\",\n            componentName: \"SpinalHome\",\n            componentState: {\n              template: \"inspector.html\",\n              controller: \"InspectorCtrl\"\n            }\n          }\n        }\n      ];\n\n      for (var i = 0; i < $scope.layouts.length; i++) {\n        goldenLayoutService.registerPanel($scope.layouts[i]);\n      }\n    }\n  ]);\nvar changePasswordModelCtrl = function(\n  $scope,\n  authService,\n  $mdToast,\n  $q,\n  $mdDialog\n) {\n  $scope.passwordInputType = \"password\";\n  $scope.showPassword = function() {\n    $scope.passwordInputType = \"text\";\n  };\n  $scope.hidePassword = function() {\n    $scope.passwordInputType = \"password\";\n  };\n\n  $scope.cancel = function() {\n    $mdDialog.cancel();\n  };\n  $scope.change_password = {\n    currentPassword: \"\",\n    password: \"\",\n    confirm_password: \"\"\n  };\n  $scope.onError = function(err) {\n    $mdToast.showSimple(\"Error : \" + err);\n  };\n  let options = location.host + \"/\";\n\n  $scope.change_password = (user_id, password, new_password) => {\n    let deferred = $q.defer();\n    window.SpinalUserManager.change_password(\n      options,\n      user_id,\n      password,\n      new_password,\n      function() {\n        deferred.resolve();\n      },\n      function(err) {\n        deferred.reject(err);\n      }\n    );\n    return deferred.promise;\n  };\n\n  $scope.get_user_id = (user_name, password) => {\n    let deferred = $q.defer();\n    window.SpinalUserManager.get_user_id(\n      options,\n      user_name,\n      password,\n      function(response) {\n        let id = parseInt(response);\n        deferred.resolve(id);\n      },\n      function(err) {\n        deferred.reject(err);\n      }\n    );\n    return deferred.promise;\n  };\n\n  $scope.changePasswordSubmit = (newpasswordForm, change_password) => {\n    if (newpasswordForm.$valid) {\n      let user = authService.get_user();\n      $scope\n        .get_user_id(user.username, change_password.currentPassword)\n        .then(function() {\n          $scope\n            .change_password(\n              user.username,\n              change_password.currentPassword,\n              change_password.password\n            )\n            .then(function() {\n              authService.save_user(user.username, change_password.password);\n              $mdToast.showSimple(\"Password has been successfully modified.\");\n              $mdDialog.hide();\n            }, $scope.onError);\n        }, $scope.onError);\n      return;\n    }\n  };\n};\n",
    "window.angular\n  .module(\"app.sidebar\", [\"jsTree.directive\", \"app.services\", \"app.spinalcom\"])\n  .controller(\"sideBarCtrl\", [\n    \"$scope\",\n    \"$rootScope\",\n    \"spinalFileSystem\",\n    \"$mdDialog\",\n    \"$injector\",\n    function($scope, $rootScope, spinalFileSystem, $mdDialog, $injector) {\n      $scope.injector = $injector;\n      $scope.fsdir = [];\n      $scope.all_dir = {};\n      $scope.selected_node = 0;\n      // var newFolder_prompt = $mdDialog\n      //   .prompt()\n      //   .title(\"Input the name of the new folder\")\n      //   .placeholder(\"Folder Name\")\n      //   .initialValue(\"New Folder\")\n      //   .required(true)\n      //   .ok(\"Ok\")\n      //   .cancel(\"Cancel\");\n\n      $scope.DnD_callback = (op, node, par, pos, more) => {\n        if (\n          ((op === \"move_node\" || op === \"copy_node\") &&\n            node.type &&\n            node.type == \"root\") ||\n          par.id == \"#\"\n        ) {\n          return false;\n        }\n\n        if (node.original.model == par.original.model) return false;\n\n        if ((op === \"move_node\" || op === \"copy_node\") && more && more.core) {\n          if (confirm(\"Are you sure you want to move the folder ?\")) {\n            // UPDATE SPINALCORE MODELS HERE\n            let m_parent = window.FileSystem._objects[par.original.model];\n            let m_node;\n            let n_par =\n              spinalFileSystem.folderExplorer_dir[node.original.parent];\n            let n_parent = window.FileSystem._objects[n_par.model];\n            // let n;\n            for (var i = 0; i < n_parent.length; i++) {\n              if (n_parent[i]._ptr.data.value == node.original.model) {\n                m_node = n_parent[i];\n                break;\n              }\n            }\n\n            if (!m_parent || !m_node) return false;\n\n            if (m_parent != n_parent) {\n              let node_name = m_node.name.get();\n              let base_node_name = node_name;\n              let x = 0;\n              while (m_parent.has(node_name)) {\n                node_name = base_node_name + \"(\" + x + \")\";\n                x++;\n              }\n              if (node_name != m_node.name.get()) m_node.name.set(node_name);\n            }\n            if (\n              op == \"move_node\" ||\n              (m_parent == n_parent && op == \"copy_node\")\n            ) {\n              for (i = 0; i < n_parent.length; i++) {\n                let f = n_parent[i];\n                if (f == m_node) {\n                  n_parent.splice(i, 1);\n                  if (i < pos) pos--;\n                  break;\n                }\n              }\n            }\n            // if ((m_parent == n_parent) && op == \"copy_node\") return false;\n            m_parent.insert(pos, [m_node]);\n            return true;\n          }\n          return false;\n        }\n        return true;\n      };\n\n      $scope.contextMenu = node => {\n        let apps = window.spinalDrive_Env.get_applications(\n          \"FolderExplorer\",\n          node\n        );\n        let create_action_callback = (node, app) => {\n          return function() {\n            let share_obj = {\n              node: node,\n              model_server_id: node.original.model,\n              scope: $scope\n            };\n            app.action(share_obj);\n          };\n        };\n\n        let res = {};\n        for (var i = 0; i < apps.length; i++) {\n          let app = apps[i];\n          res[app.name] = {\n            label: app.label,\n            icon: app.icon,\n            action: create_action_callback(node, app)\n          };\n        }\n        return res;\n      };\n\n      $scope.treeCore = {\n        themes: {\n          name: \"default-dark\"\n        },\n        check_callback: $scope.DnD_callback\n      };\n      let listener_destructor = spinalFileSystem.subcribe(\n        \"SPINAL_FS_ONCHANGE\",\n        () => {\n          spinalFileSystem.getFolderJson($scope.all_dir).then(res => {\n            $scope.fsdir = res.tree;\n            $scope.all_dir = res.all_dir;\n          });\n        }\n      );\n      $scope.$on(\"$destroy\", listener_destructor);\n\n      $scope.select_node = (e, data) => {\n        $scope.selected_node = data.node.original;\n        spinalFileSystem.select_node($scope.all_dir, data);\n      };\n      $scope.onChangeNodeTree = (e, data) => {\n        spinalFileSystem.onChangeNodeTree($scope.all_dir, data);\n      };\n      $scope.onbdlclick = event => {\n        var node = window.$(event.target).closest(\"li\");\n        spinalFileSystem.onbdlclick($scope.all_dir, node[0].id);\n      };\n\n      spinalFileSystem.init();\n      spinalFileSystem.getFolderJson($scope.all_dir).then(res => {\n        $scope.fsdir = res.tree;\n        $scope.all_dir = res.all_dir;\n      });\n    }\n  ]);\n",
    "window.angular\n  .module(\"app.directives\")\n  .directive(\"dragDrop\", function() {\n    return {\n      scope: {\n        fileObj: \"=fileObj\",\n        events: \"=dragEvents\"\n      },\n      link: function(scope, element) {\n        let events = [];\n        element.attr(\"draggable\", \"true\");\n        if (scope.events) {\n          let create_callback_event = (key, scope) => {\n            return event => {\n              return scope.events[key](event, scope.fileObj);\n            };\n          };\n\n          for (let key in scope.events) {\n            if (scope.events.hasOwnProperty(key)) {\n              let obj = {\n                fn: create_callback_event(key, scope),\n                key: key\n              };\n              events.push(obj);\n              element.on(key, obj.fn);\n            }\n          }\n          scope.$on(\"$destroy\", () => {\n            for (var i = 0; i < events.length; i++) {\n              element.off(events[i].key, events[i].fn);\n            }\n          });\n        }\n      }\n    };\n  })\n  .directive(\"folderDrop\", function() {\n    return {\n      scope: {\n        events: \"=folderdropEvents\"\n      },\n      link: function(scope, element) {\n        let events = [];\n        if (scope.events) {\n          let create_callback_event = (key, element) => {\n            return event => {\n              return scope.events[key](event, element);\n            };\n          };\n          for (let key in scope.events) {\n            if (scope.events.hasOwnProperty(key)) {\n              let obj = {\n                fn: create_callback_event(key, element),\n                key: key\n              };\n              events.push(obj);\n              element.on(key, obj.fn);\n            }\n          }\n          scope.$on(\"$destroy\", () => {\n            for (var i = 0; i < events.length; i++) {\n              element.off(events[i].key, events[i].fn);\n            }\n          });\n        }\n      }\n    };\n  });\n",
    "/*\n * jstree.directive [http://www.jstree.com]\n * http://arvindr21.github.io/jsTree-Angular-Directive\n *\n * Copyright (c) 2014 Arvind Ravulavaru\n * Licensed under the MIT license.\n *\n * Modified by Laurent HA TAM DAN\n * Copyright 2015 SpinalCom - www.spinalcom.com\n *\n */\n\nvar ngJSTree = window.angular.module(\"jsTree.directive\", []);\nngJSTree.directive(\"jsTree\", [\n  \"$http\",\n  function($http) {\n    var tree = {};\n    var treeDir = {\n      restrict: \"EA\",\n      fetchResource: function(url, cb) {\n        return $http.get(url).then(function(data) {\n          if (cb) cb(data.data);\n        });\n      },\n\n      managePlugins: function(s, e, a, config) {\n        if (a.treePlugins) {\n          config.plugins = a.treePlugins.split(\",\");\n          config.core = config.core || {};\n          config.core.check_callback = config.core.check_callback || true;\n\n          if (config.plugins.indexOf(\"state\") >= 0) {\n            config.state = config.state || {};\n            config.state.key = a.treeStateKey;\n          }\n\n          if (config.plugins.indexOf(\"search\") >= 0) {\n            var to = false;\n            if (e.next().attr(\"class\") !== \"ng-tree-search\") {\n              e\n                .after(\n                  '<input type=\"text\" placeholder=\"Search Tree\" class=\"ng-tree-search\"/>'\n                )\n                .next()\n                .on(\"keyup\", function(ev) {\n                  if (to) {\n                    clearTimeout(to);\n                  }\n                  to = setTimeout(function() {\n                    tree.jstree(true).search(ev.target.value);\n                  }, 250);\n                });\n            }\n          }\n\n          if (config.plugins.indexOf(\"checkbox\") >= 0) {\n            config.checkbox = config.checkbox || {};\n            config.checkbox.keep_selected_style = false;\n          }\n\n          if (config.plugins.indexOf(\"contextmenu\") >= 0) {\n            if (a.treeContextmenu) {\n              config.contextmenu =\n                config.contextmenu ||\n                {\n                  // 'select_node': false,\n                };\n              if (typeof a.disableselectContextmenu != \"undefined\") {\n                config.contextmenu.select_node = false;\n              }\n              if (a.treeContextmenuaction != undefined) {\n                config.contextmenu.items = function(e) {\n                  return s.$eval(a.treeContextmenuaction)(e);\n                };\n              } else {\n                config.contextmenu.items = function(node) {\n                  if (typeof s[a.treeContextmenu] == \"function\")\n                    return s[a.treeContextmenu](node);\n                  return s[a.treeContextmenu];\n                };\n              }\n            }\n          }\n\n          if (config.plugins.indexOf(\"types\") >= 0) {\n            if (a.treeTypes) {\n              config.types = s[a.treeTypes];\n            }\n          }\n\n          if (config.plugins.indexOf(\"dnd\") >= 0) {\n            if (a.treeDnd) {\n              config.dnd = s[a.treeDnd];\n            }\n          }\n        }\n        return config;\n      },\n      manageEvents: function(s, e, a) {\n        if (a.treeEvents) {\n          var evMap = a.treeEvents.split(\";\");\n          for (var i = 0; i < evMap.length; i++) {\n            if (evMap[i].length > 0) {\n              // plugins could have events with suffixes other than '.jstree'\n              var evt = evMap[i].split(\":\")[0];\n              if (evt.indexOf(\".\") < 0) {\n                evt = evt + \".jstree\";\n              }\n              var cb = evMap[i].split(\":\")[1];\n              tree.on(evt, s[cb]);\n            }\n          }\n        }\n      },\n      manageBinds: function(s, e, a) {\n        if (a.treeBinds) {\n          var evMap = a.treeBinds.split(\";\");\n          for (var i = 0; i < evMap.length; i++) {\n            if (evMap[i].length > 0) {\n              var evt = evMap[i].split(\":\")[0];\n              var cb = evMap[i].split(\":\")[1];\n              tree.on(evt, s[cb]);\n            }\n          }\n        }\n      },\n      link: function(s, e, a) {\n        // scope, element, attribute \\O/\n        window.$(function() {\n          var config = {};\n\n          // users can define 'core'\n          config.core = {};\n          if (a.treeCore) {\n            config.core = window.$.extend(config.core, s[a.treeCore]);\n          }\n\n          // clean Case\n          a.treeData = a.treeData ? a.treeData.toLowerCase() : \"\";\n          a.treeSrc = a.treeSrc ? a.treeSrc.toLowerCase() : \"\";\n\n          if (a.treeData == \"html\") {\n            treeDir.fetchResource(a.treeSrc, function(data) {\n              e.html(data);\n              treeDir.init(s, e, a, config);\n            });\n          } else if (a.treeData == \"json\") {\n            treeDir.fetchResource(a.treeSrc, function(data) {\n              config.core.data = data;\n              treeDir.init(s, e, a, config);\n            });\n          } else if (a.treeData == \"scope\") {\n            s.$watch(\n              a.treeModel,\n              function(n) {\n                if (n) {\n                  config.core.data = s[a.treeModel];\n                  window.$(e).jstree(\"destroy\");\n                  treeDir.init(s, e, a, config);\n                }\n              },\n              true\n            );\n            // Trigger it initally\n            // Fix issue #13\n            config.core.data = s[a.treeModel];\n            treeDir.init(s, e, a, config);\n          } else if (a.treeAjax) {\n            config.core.data = {\n              url: a.treeAjax,\n              data: function(node) {\n                return {\n                  id: node.id != \"#\" ? node.id : 1\n                };\n              }\n            };\n            treeDir.init(s, e, a, config);\n          }\n        });\n      },\n      init: function(s, e, a, config) {\n        treeDir.managePlugins(s, e, a, config);\n        tree = window.$(e).jstree(config);\n        treeDir.manageEvents(s, e, a);\n        treeDir.manageBinds(s, e, a);\n      }\n    };\n\n    return treeDir;\n  }\n]);\n",
    "compareTo.$inject = [];\n\nfunction compareTo() {\n  return {\n    require: \"ngModel\",\n    scope: {\n      compareTolValue: \"=compareTo\"\n    },\n    link: function(scope, element, attributes, ngModel) {\n      ngModel.$validators.compareTo = function(modelValue) {\n        return modelValue == scope.compareTolValue;\n      };\n      scope.$watch(\"compareTolValue\", function() {\n        ngModel.$validate();\n      });\n    }\n  };\n}\nwindow.angular\n  .module(\"app.directives\")\n  .directive(\"navbar\", [\n    function() {\n      return {\n        restrict: \"E\",\n        templateUrl: \"app/templates/navbar.html\",\n        controller: \"navbarCtrl\"\n      };\n    }\n  ])\n  .directive(\"menuGlayout\", [\n    \"goldenLayoutService\",\n    \"$timeout\",\n    function(goldenLayoutService, $timeout) {\n      return {\n        restrict: \"E\",\n        scope: {\n          layoutInfo: \"=info\"\n        },\n        replace: true,\n        template:\n          '<li ng-repeat=\"layout in layoutInfo\"  id=\"{{layout.id}}\"><a >{{layout.name}}</a></li>',\n        link: scope => {\n          goldenLayoutService.wait_ready().then(() => {\n            let create_callback = (goldenLayoutService, layout) => {\n              return () => {\n                goldenLayoutService.createChild(layout.cfg);\n              };\n            };\n            goldenLayoutService.watch_panel(panels => {\n              $timeout(() => {\n                for (var i = 0; i < panels.length; i++) {\n                  let layout = panels[i];\n                  if (!layout.shown) {\n                    layout.shown = true;\n                    goldenLayoutService.createDragSource(\n                      window.$(\"#\" + layout.id)[0],\n                      layout.cfg\n                    );\n                    window\n                      .$(\"#\" + layout.id)\n                      .click(create_callback(goldenLayoutService, layout));\n                  }\n                }\n              }, 200);\n              scope.layoutInfo = panels;\n            });\n          });\n        }\n      };\n    }\n  ])\n  .directive(\"ngRightClick\", [\n    \"$parse\",\n    function($parse) {\n      return function(scope, element, attrs) {\n        var fn = $parse(attrs.ngRightClick);\n        element.bind(\"contextmenu\", function(event) {\n          scope.$apply(function() {\n            event.preventDefault();\n            fn(scope, {\n              $event: event\n            });\n          });\n        });\n      };\n    }\n  ])\n  .directive(\"compareTo\", compareTo)\n  .provider(\"$copyToClipboard\", [\n    function() {\n      this.$get = [\n        \"$q\",\n        \"$window\",\n        function($q, $window) {\n          var body = window.angular.element($window.document.body);\n          var textarea = window.angular.element(\"<textarea/>\");\n          textarea.css({\n            position: \"fixed\",\n            opacity: \"0\"\n          });\n          return {\n            copy: function(stringToCopy) {\n              var deferred = $q.defer();\n              deferred.notify(\"copying the text to clipboard\");\n              textarea.val(stringToCopy);\n              body.append(textarea);\n              textarea[0].select();\n              try {\n                var successful = $window.document.execCommand(\"copy\");\n                if (!successful) throw successful;\n                deferred.resolve(successful);\n              } catch (err) {\n                deferred.reject(err);\n              } finally {\n                textarea.remove();\n              }\n              return deferred.promise;\n            }\n          };\n        }\n      ];\n    }\n  ]);\n",
    "window.angular\n  .module(\"app.directives\")\n  .factory(\"spinalInspectUID\", [\n    function() {\n      let uid = 0;\n      let facto = {\n        uid: 0,\n        get_uid: () => {\n          uid = facto.uid;\n          ++facto.uid;\n          return uid;\n        },\n        get_last_uid: () => {\n          return uid;\n        },\n        elem: {}\n      };\n\n      //tooltip ~~\n      facto.tooltip = window.d3\n        .select(\"body\")\n        .append(\"div\")\n        .attr(\"class\", \"inspect-tooltip\")\n        .style(\"opacity\", 1e-6);\n\n      return facto;\n    }\n  ])\n  .directive(\"spinalInspect\", [\n    \"spinalInspectUID\",\n    function(spinalInspectUID) {\n      let directive = {\n        restrict: \"EA\",\n        link: function(s, e) {\n          // scope, element, attribute\n          let uid = spinalInspectUID.get_uid();\n          let elem = window.$(\n            '<div class=\"spinal-inspector-container\" id=\"spinalinspect_' +\n              uid +\n              '\"></div><div class=\"spinal-inspect-btn-grp\"><button class=\"btn btn-primary fa fa-bullseye\" id=\"spinalinspect_btn_centerroot_' +\n              uid +\n              '\"></button></div>'\n          );\n          spinalInspectUID.elem[uid] = elem;\n          window.$(e).append(elem);\n        }\n      };\n      return directive;\n    }\n  ]);\n",
    "window.angular.module(\"app.spinalcom\").factory(\"authService\", [\n  \"$q\",\n  \"ngSpinalCore\",\n  \"config\",\n  \"$http\",\n  function($q, ngSpinalCore, config, $http) {\n    let factory = {};\n    let user = {\n      username: \"\",\n      password: \"\"\n    };\n    let is_Connected = false;\n    factory.save_user = (username, password) => {\n      user.username = username;\n      user.password = password;\n      window.localStorage.setItem(\"spinalhome_cfg\", btoa(JSON.stringify(user)));\n    };\n    factory.get_user = () => {\n      let _user = window.localStorage.getItem(\"spinalhome_cfg\");\n      if (_user) {\n        user = JSON.parse(atob(_user));\n      }\n      return user;\n    };\n    factory.logout = () => {\n      if (user.username != \"\") {\n        factory.save_user(\"\", \"\");\n        location.reload();\n      }\n    };\n\n    factory.login = (username, password) => {\n      let deferred = $q.defer();\n      let url = \"/get_user_id\";\n      $http.get(url + \"?u=\" + username + \"&p=\" + password).then(\n        function(data) {\n          var u = parseInt(data.data);\n          var i = 0;\n          if (u == -1) {\n            let msg = \"Login Error: username / password pair not found.\";\n            // $mdToast.show(loginError_toast)\n            deferred.reject(msg);\n            for (i = 0; i < wait_connectList.length; i++) {\n              wait_connectList[i].reject();\n            }\n            wait_connectList = [];\n            return;\n          }\n          ngSpinalCore.connect(\n            \"http://\" +\n              u +\n              \":\" +\n              password +\n              \"@\" +\n              config.spinalhub_url +\n              \":\" +\n              config.spinalhub_port +\n              \"/\"\n          );\n          factory.save_user(username, password);\n          is_Connected = true;\n          deferred.resolve();\n          for (i = 0; i < wait_connectList.length; i++) {\n            wait_connectList[i].resolve();\n          }\n          wait_connectList = [];\n        },\n        function() {\n          let msg = \"Connection Error: Imposible to connect to the server.\";\n          // $mdToast.show(connectionError_toast)\n          deferred.reject(msg);\n          for (var i = 0; i < wait_connectList.length; i++) {\n            wait_connectList[i].reject();\n          }\n          wait_connectList = [];\n        }\n      );\n      return deferred.promise;\n    };\n\n    factory.is_Connected = () => {\n      return is_Connected;\n    };\n    let wait_connectList = [];\n    factory.wait_connect = () => {\n      let deferred = $q.defer();\n      if (is_Connected == true) {\n        deferred.resolve();\n      } else wait_connectList.push(deferred);\n      return deferred.promise;\n    };\n\n    return factory;\n  }\n]);\n",
    "window.angular\n  .module(\"app.services\")\n  .factory(\"goldenLayoutService\", [\n    \"$q\",\n    \"$window\",\n    \"$templateCache\",\n    \"$rootScope\",\n    \"$compile\",\n    function($q, $window, $templateCache, $rootScope, $compile) {\n      var config = {\n        content: [\n          {\n            type: \"row\",\n            content: [\n              {\n                isClosable: false,\n                title: \"Folder Explorer\",\n                type: \"component\",\n                width: 20,\n                componentName: \"SpinalHome\",\n                componentState: {\n                  template: \"sideBar.html\",\n                  controller: \"sideBarCtrl\"\n                }\n              },\n              {\n                isClosable: false,\n                title: \"File Explorer\",\n                type: \"component\",\n                componentName: \"SpinalHome\",\n                componentState: {\n                  template: \"FileExplorer.html\",\n                  controller: \"FileExplorerCtrl\"\n                }\n              }\n              // {\n              //   isClosable: false,\n              //   title: \"Inspector\",\n              //   type: 'component',\n              //   componentName: 'SpinalHome',\n              //   componentState: {\n              //     template: 'inspector.html',\n              //     controller: 'InspectorCtrl'\n              //   }\n              // }\n            ]\n          }\n        ]\n      };\n      let myLayout = 0;\n      let factory = {};\n      factory.init = () => {\n        if (myLayout == 0) {\n          myLayout = new window.GoldenLayout(config, window.$(\"#g-layout\"));\n          myLayout.registerComponent(\"SpinalHome\", function(container, state) {\n            var element = container.getElement();\n            if (state.template == \"\") {\n              element.html();\n              $compile(element.contents())($rootScope);\n            } else {\n              element.html(\n                '<div class=\"gpanel-content\" ng-controller=\"' +\n                  state.controller +\n                  '\" ng-cloak>' +\n                  $templateCache.get(state.template) +\n                  \"</div>\"\n              );\n              $compile(element.contents())($rootScope);\n            }\n          });\n\n          myLayout.init();\n          window.angular.element($window).bind(\"resize\", function() {\n            myLayout.updateSize();\n          });\n          $rootScope.$emit(\"GoldenLayout_READY\");\n        }\n      };\n\n      factory.wait_ready = () => {\n        return $q(function(resolve) {\n          $rootScope.$on(\"GoldenLayout_READY\", () => {\n            resolve();\n          });\n        });\n      };\n\n      factory.createChild = config => {\n        myLayout.root.contentItems[0].addChild(config);\n      };\n\n      factory.createDragSource = (element, config) => {\n        myLayout.createDragSource(element, config);\n      };\n\n      factory.panels = [];\n      factory.panels_watchers = [];\n      factory.registerPanel = panel => {\n        factory.panels.push(panel);\n        for (var i = 0; i < factory.panels_watchers.length; i++) {\n          factory.panels_watchers[i](factory.panels);\n        }\n      };\n      factory.getPanels = () => {\n        return factory.panels;\n      };\n      factory.watch_panel = fn => {\n        if (factory.panels_watchers.length === 0) {\n          factory.panels_watchers.push(fn);\n          if (factory.panels.length != 0) {\n            fn(factory.panels);\n          }\n          return;\n        }\n        let found = false;\n        for (var i = 0; i < factory.panels_watchers.length; i++) {\n          if (factory.panels_watchers[i] === fn) {\n            found = true;\n            break;\n          }\n        }\n        if (found === false) factory.panels_watchers.push(fn);\n      };\n\n      return factory;\n    }\n  ])\n  .factory(\"layout_uid\", function() {\n    let uid = 0;\n    return {\n      get: () => {\n        let id = uid++;\n        return id;\n      }\n    };\n  });\n",
    "window.angular.module(\"app.spinalcom\").factory(\"ngSpinalCore\", [\n  \"$q\",\n  function($q) {\n    var service = {};\n    service.conn = 0;\n\n    service.connect = function(option) {\n      service.conn = window.spinalCore.connect(option);\n    };\n    service.store = function(model, path) {\n      var deferred = $q.defer();\n      window.spinalCore.store(\n        service.conn,\n        model,\n        path,\n        function(model) {\n          deferred.resolve(model);\n        },\n        function() {\n          deferred.reject();\n        }\n      );\n      return deferred.promise;\n    };\n    service.load = function(path) {\n      var deferred = $q.defer();\n      window.spinalCore.load(\n        service.conn,\n        path,\n        function(model) {\n          deferred.resolve(model);\n        },\n        function() {\n          deferred.reject();\n        }\n      );\n      return deferred.promise;\n    };\n    service.load_type = function(modelName, callback_success, callback_error) {\n      // var deferred = $q.defer();\n      window.spinalCore.load_type(\n        service.conn,\n        modelName,\n        function(model) {\n          callback_success(model);\n          // deferred.resolve(model);\n        },\n        function() {\n          callback_error();\n          // deferred.reject();\n        }\n      );\n      // return deferred.promise;\n    };\n    service.load_right = function(ptr) {\n      var deferred = $q.defer();\n      window.spinalCore.load_right(\n        service.conn,\n        ptr,\n        function(model) {\n          deferred.resolve(model);\n        },\n        function() {\n          deferred.reject();\n        }\n      );\n      return deferred.promise;\n    };\n    service.share_model = function(data, filename, flag, target_username) {\n      return window.spinalCore.share_model(\n        service.conn,\n        data,\n        filename,\n        flag,\n        target_username\n      );\n    };\n    return service;\n  }\n]);\n",
    "window.angular.module(\"app.spinalcom\").service(\"spinalFileSystem\", [\n  \"$q\",\n  \"spinalModelDictionary\",\n  \"$rootScope\",\n  \"$timeout\",\n  \"goldenLayoutService\",\n  function(\n    $q,\n    spinalModelDictionary,\n    $rootScope,\n    $timeout,\n    goldenLayoutService\n  ) {\n    // let this = {};\n    this.current_dir = 0;\n    this.model = 0;\n    this.id = 1;\n    this.folderExplorer_dir = {};\n    let listener_list = {};\n    this.curr_window = 0;\n\n    this.emit_subcriber = (name, arg) => {\n      let listeners = listener_list[name];\n      if (listeners) {\n        for (var i = 0; i < listeners.length; i++) {\n          if (listeners[i]) listeners[i](arg);\n        }\n      }\n    };\n    this.subcribe = (name, listener) => {\n      let listeners = listener_list[name];\n      if (!listeners) {\n        listener_list[name] = [];\n        listeners = listener_list[name];\n      }\n      listeners.push(listener);\n      return () => {\n        let indexOfListener = listeners.indexOf(listener);\n        if (indexOfListener !== -1) {\n          listeners[indexOfListener] = null;\n        }\n      };\n    };\n    this.unsubcribe = (name, listener) => {\n      let listeners = listener_list[name];\n      let indexOfListener = listeners.indexOf(listener);\n      if (indexOfListener !== -1) {\n        listeners[indexOfListener] = null;\n      }\n    };\n\n    this.init = () => {\n      return spinalModelDictionary.init().then(\n        m => {\n          if (this.model == 0) {\n            this.model = m;\n            this.current_dir = m;\n            this.model.bind(() => {\n              this.emit_subcriber(\"SPINAL_FS_ONCHANGE\");\n            });\n          }\n        },\n        () => {\n          //nothing for now\n        }\n      );\n    };\n\n    this.ptrRdy_defer = (ptr, promise, isnew = false) => {\n      if (!ptr.data.value || window.FileSystem._tmp_objects[ptr.data.value]) {\n        setTimeout(() => {\n          this.ptrRdy_defer(ptr, promise, true);\n        }, 200);\n        return;\n      }\n      if (window.FileSystem._objects[ptr.data.value]) {\n        promise({\n          model: window.FileSystem._objects[ptr.data.value],\n          firstTime: isnew\n        });\n      } else {\n        ptr.load(m => {\n          promise({\n            model: m,\n            firstTime: true\n          });\n        });\n      }\n    };\n\n    this.waitPtrRdyAndLoad = ptr => {\n      return new Promise(resolve => {\n        this.ptrRdy_defer(ptr, resolve);\n      });\n    };\n\n    this.load_dir = f => {\n      let deferred = $q.defer();\n      this.waitPtrRdyAndLoad(f._ptr).then(res => {\n        let m = res.model;\n        let firstTime = res.firstTime;\n        if (m) {\n          if (firstTime)\n            m.bind(() => {\n              this.emit_subcriber(\"SPINAL_FS_ONCHANGE\");\n            }, false);\n          deferred.resolve(m);\n        } else deferred.reject();\n      });\n      return deferred.promise;\n    };\n\n    this.deferGetFolderJson_rec = (\n      prom_arr,\n      all_dir,\n      dir,\n      arr,\n      name,\n      parent,\n      opened\n    ) => {\n      let deferred = $q.defer();\n      setTimeout(() => {\n        deferred.resolve(\n          this.getFolderJson_rec(all_dir, dir, arr, name, parent, opened)\n        );\n      }, 100);\n      return deferred.promise;\n    };\n\n    // {\n    //   id          : \"string\" // required\n    //   parent      : \"string\" // required\n    //   text        : \"string\" // node text\n    //   icon        : \"string\" // string for custom\n    //   state       : {\n    //     opened    : boolean  // is the node open\n    //     disabled  : boolean  // is the node disabled\n    //     selected  : boolean  // is the node selected\n    //   },\n    //   li_attr     : {}  // attributes for the generated LI node\n    //   a_attr      : {}  // attributes for the generated A node\n    // }\n    this.getFolderJson_rec = (\n      all_dir,\n      dir,\n      arr = [],\n      name = \"home\",\n      parent = \"#\",\n      opened = true\n    ) => {\n      let current;\n      var prom_arr = [];\n      // search if not existing\n\n      if (!dir._server_id || window.FileSystem._tmp_objects[dir._server_id]) {\n        return this.deferGetFolderJson_rec(\n          prom_arr,\n          all_dir,\n          dir,\n          arr,\n          name,\n          parent,\n          opened\n        );\n      }\n\n      for (var key in all_dir) {\n        let n = all_dir[key];\n        if (n.model == dir._server_id && n.text == name && n.parent == parent) {\n          current = n;\n          break;\n        }\n      }\n\n      if (!current) {\n        // current not found\n        current = {\n          model: dir._server_id,\n          id: this.id,\n          parent: parent,\n          text: name,\n          state: {\n            opened: opened\n          }\n        };\n        this.id++;\n        if (\n          opened == true ||\n          (typeof all_dir[current.id] != \"undefined\" &&\n            all_dir[current.id].state.opened == true)\n        ) {\n          current.state.opened = true;\n        }\n      }\n\n      arr.push(current);\n      all_dir[current.id] = current;\n      this.folderExplorer_dir[current.id] = current;\n      let create_callback = (all_dir, arr, f, current) => {\n        return m => {\n          return this.getFolderJson_rec(\n            all_dir,\n            m,\n            arr,\n            f.name.get(),\n            current.id,\n            false\n          );\n        };\n      };\n      for (var i = 0; i < dir.length; i++) {\n        let f = dir[i];\n        if (f._info.model_type.get() == \"Directory\") {\n          prom_arr.push(\n            this.load_dir(f).then(create_callback(all_dir, arr, f, current))\n          );\n        }\n      }\n      return $q.all(prom_arr).then(() => {\n        return {\n          tree: arr,\n          all_dir: all_dir\n        };\n      });\n    };\n\n    this.onChangeNodeTree = (all_dir, data) => {\n      all_dir[data.node.original.id].state = data.node.state;\n      this.folderExplorer_dir[data.node.original.id].state = data.node.state;\n    };\n\n    this.onbdlclick = () => {};\n    this.openFolder = (all_dir, node) => {\n      if (this.curr_window && window.FileSystem._objects[node.original.model]) {\n        this.curr_window.change_curr_dir(\n          window.FileSystem._objects[node.original.model],\n          this.create_path_with_node(node)\n        );\n      }\n    };\n    this.openFolderInNewLayer = (all_dir, node) => {\n      goldenLayoutService.createChild({\n        isClosable: true,\n        title: \"File Explorer\",\n        type: \"component\",\n        componentName: \"SpinalHome\",\n        componentState: {\n          template: \"FileExplorer.html\",\n          module: \"app.FileExplorer\",\n          controller: \"FileExplorerCtrl\"\n        }\n      });\n      $timeout(() => {\n        if (\n          this.curr_window &&\n          window.FileSystem._objects[node.original.model]\n        ) {\n          this.curr_window.change_curr_dir(\n            window.FileSystem._objects[node.original.model],\n            this.create_path_with_node(node)\n          );\n        }\n      });\n    };\n    this.newFolder = (all_dir, data, name) => {\n      let f = window.FileSystem._objects[data.original.model];\n      if (f) {\n        let folder_name = name;\n        let base_folder_name = folder_name.replace(/\\([\\d]*\\)/g, \"\");\n        let x = 0;\n        while (f.has(folder_name)) {\n          folder_name = base_folder_name + \"(\" + x + \")\";\n          x++;\n        }\n        f.add_file(folder_name, new window.Directory());\n      }\n    };\n    this.FileExplorer_focus = scope => {\n      this.curr_window = scope;\n    };\n\n    this.get_node_by_id = id => {\n      for (var key in this.folderExplorer_dir) {\n        if (this.folderExplorer_dir[key].id == id)\n          return this.folderExplorer_dir[key];\n      }\n      return 0;\n    };\n    this.create_path_with_node = data => {\n      let path = [];\n      let parents = Array.from(data.parents).reverse();\n      // parent =\n      for (var i = 0; i < parents.length; i++) {\n        let parent = parents[i];\n        if (parent == \"#\") continue;\n        let node_parent = this.get_node_by_id(parent);\n        if (node_parent) {\n          path.push({\n            name: node_parent.text,\n            _server_id: node_parent.model\n          });\n        }\n      }\n      path.push({\n        name: data.text,\n        _server_id: data.model\n      });\n      return path;\n    };\n\n    this.select_node = (all_dir, data) => {\n      if (\n        this.curr_window &&\n        window.FileSystem._objects[data.node.original.model]\n      ) {\n        this.curr_window.change_curr_dir(\n          window.FileSystem._objects[data.node.original.model],\n          this.create_path_with_node(data.node)\n        );\n      }\n    };\n\n    this.deleteFolder = (all_dir, node) => {\n      let f = window.FileSystem._objects[node.original.model];\n      if (f) {\n        let parent = all_dir[node.original.parent];\n        if (window.FileSystem._objects[parent.model]) {\n          let m_parent = window.FileSystem._objects[parent.model];\n          for (var i = 0; i < m_parent.length; i++) {\n            if (\n              m_parent[i]._ptr.data.value == f._server_id &&\n              node.original.text == m_parent[i].name.get()\n            ) {\n              m_parent.remove_ref(m_parent[i]);\n              break;\n            }\n          }\n        }\n      }\n    };\n\n    this.handle_FE_progressBar = (model, item) => {\n      if (model._info.model_type.get() === \"Path\") {\n        if (model._info.remaining.get() != 0) {\n          let percent =\n            (model._info.to_upload.get() - model._info.remaining.get()) /\n            model._info.to_upload.get();\n          item.upload_pecent = percent * 100;\n        }\n      } else if (\n        model._info.model_type.get() === \"BIM Project\" ||\n        model._info.model_type.get() === \"Digital twin\"\n      ) {\n        if (model._info.state) {\n          switch (model._info.state.num.get()) {\n            case 0:\n              item.upload_pecent = 10;\n              break;\n            case 1:\n              item.upload_pecent = 18;\n              break;\n            case 2:\n              item.upload_pecent = 36;\n              break;\n            case 3:\n              item.upload_pecent = 54;\n              break;\n            case 4:\n              item.upload_pecent = 72;\n              break;\n            case 5:\n              item.upload_pecent = 80;\n              break;\n            case 6:\n              item.upload_pecent = 90;\n              break;\n            case 7:\n              break;\n            case 8:\n              item.upload_pecent = 100;\n              item.error = true;\n              break;\n            // no default\n          }\n        }\n      }\n    };\n    let wait_tmp_serverid_loop = (scope, deferred, model) => {\n      if (\n        !model._server_id ||\n        window.FileSystem._tmp_objects[model._server_id]\n      ) {\n        setTimeout(() => {\n          wait_tmp_serverid_loop(scope, deferred, model);\n        }, 100);\n      } else {\n        let item = {\n          name: model.name.get(),\n          model_type: model._info.model_type.get(),\n          _server_id: model._server_id,\n          owner: scope.user.username\n        };\n        window.SpinalDrive_App._getOrCreate_log(model).then(logs => {\n          if (logs.length === 0) {\n            let tab = {\n              date: Date.now(),\n              name: scope.user.username,\n              action: \"1st visit\"\n            };\n            window.SpinalDrive_App._pushLog(logs, tab);\n          }\n\n          item.created_at = logs[0].date;\n          item.log = logs;\n\n          this.handle_FE_progressBar(model, item);\n          deferred.resolve(item);\n        });\n      }\n    };\n    let create_file_explorer_obj = (scope, model) => {\n      let deferred = $q.defer();\n      wait_tmp_serverid_loop(scope, deferred, model);\n      return deferred.promise;\n    };\n\n    this.getFolderFiles = scope => {\n      return this.init().then(() => {\n        if (!scope.curr_dir) {\n          scope.curr_dir = this.model;\n          scope.fs_path.push({\n            name: \"home\",\n            _server_id: this.model._server_id\n          });\n        }\n\n        let q = [];\n        for (var i = 0; i < scope.curr_dir.length; i++) {\n          let f = scope.curr_dir[i];\n          q.push(create_file_explorer_obj(scope, f));\n        }\n        return $q.all(q);\n      });\n    };\n\n    this.getFolderJson = all_dir => {\n      return this.init().then(() => {\n        return this.getFolderJson_rec(all_dir, this.model);\n      });\n    };\n\n    this.FE_selected_drag = [];\n    this.FE_init_dir_drag = 0;\n    this.FE_fspath_drag = [];\n    this.FE_visited_scope = [];\n    this.addScopeVisted = scope => {\n      for (var i = 0; i < this.FE_visited_scope.length; i++) {\n        if (this.FE_visited_scope[i] == scope) return;\n      }\n      this.FE_visited_scope.push(scope);\n    };\n\n    this.fileSelected = model_id => {\n      this.lastfileSelected = model_id;\n      if (this.lastinspector)\n        this.lastinspector.set_model(this.lastfileSelected);\n    };\n    this.setlastInspector = scope => {\n      this.lastinspector = scope;\n    };\n\n    return this;\n  }\n]);\n",
    "window.angular.module(\"app.spinalcom\").factory(\"spinalModelDictionary\", [\n  \"$q\",\n  \"ngSpinalCore\",\n  \"config\",\n  \"authService\",\n  function($q, ngSpinalCore, config, authService) {\n    let factory = {};\n    factory.model = 0;\n    factory.users = 0;\n    // factory._end_ = false;\n    let wait_init = [];\n\n    function reject(params) {\n      for (var i = 0; i < wait_init.length; i++) {\n        wait_init[i].reject(params);\n      }\n    }\n\n    function resolve(params) {\n      for (var i = 0; i < wait_init.length; i++) {\n        wait_init[i].resolve(params);\n      }\n    }\n\n    factory.init = () => {\n      return authService.wait_connect().then(\n        () => {\n          var deferred = $q.defer();\n          if (factory.users == 0) {\n            wait_init.push(deferred);\n            if (wait_init.length === 1) {\n              let user = authService.get_user();\n              // ngSpinalCore.connect(\"http://\" + config.spinalhub_user + \":\" + config.spinalhub_pass +\n              //   \"@\" + config.spinalhub_url + \":\" + config.spinalhub_port + '/')\n              ngSpinalCore\n                .load(\"/__users__/\" + user.username)\n                .then(\n                  m => {\n                    factory.model = m;\n                    return ngSpinalCore.load(\"/etc/users\");\n                    // deferred.resolve(m);\n                  },\n                  () => {\n                    let msg =\n                      \"not able to load : \" + \"/__users__/\" + user.username;\n                    console.error(msg);\n                    // deferred.reject(msg);\n                    reject(msg);\n                  }\n                )\n                .then(\n                  u => {\n                    factory.users = u;\n                    // factory._end_ = false;\n                    // deferred.resolve(factory.model);\n                    resolve(factory.model);\n                  },\n                  () => {\n                    let msg = \"not able to load : \" + \"/etc/users\";\n                    console.error(msg);\n                    reject(msg);\n                    // deferred.reject(msg);\n                  }\n                );\n            }\n          } else deferred.resolve(factory.model);\n          return deferred.promise;\n        },\n        () => {\n          let user = authService.get_user();\n          let msg = \"not able to load : \" + \"/__users__/\" + user.username;\n          console.error(msg);\n          reject(msg);\n          // deferred.reject(msg);\n        }\n      );\n    };\n    return factory;\n  }\n]);\n"
  ]
}